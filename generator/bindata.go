// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// templates/maven/.helm/Chart.yaml
// templates/maven/.helm/templates/NOTES.txt
// templates/maven/.helm/templates/deployment.yaml
// templates/maven/.helm/templates/service.yaml
// templates/maven/.helm/values.yaml
// templates/maven/Dockerfile
// templates/maven/Jenkinsfile
// templates/maven/cicd.yaml
// templates/npm/.helm/Chart.yaml
// templates/npm/.helm/templates/NOTES.txt
// templates/npm/.helm/templates/deployment.yaml
// templates/npm/.helm/templates/service.yaml
// templates/npm/.helm/values.yaml
// templates/npm/Dockerfile
// templates/npm/Jenkinsfile
// templates/npm/cicd.yaml
// templates/npm/nginx.conf.template
package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesMavenHelmChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x6f\xdb\x3c\x10\xde\xf9\x2b\x0e\xd1\xe0\xf7\x05\x0a\xc5\xe9\xd0\xc1\x5b\xb6\x16\xed\xd6\xa0\x3b\x4d\x3e\xb2\xae\xa1\x48\x96\x3c\x39\xd5\xbf\x2f\x4e\xb2\x1c\xc5\x05\x82\x8e\xe4\x1d\x9f\xaf\x3b\xc9\x66\xfe\x81\x52\x39\xc5\x03\x9d\x3f\x9a\x68\x07\x1c\xa8\xda\x21\x07\x18\x8f\xea\x0a\x67\x99\x8b\x8f\xf4\x19\x61\x20\xd7\xdb\x22\xd4\xa5\x42\x5f\xc7\x23\x4a\x84\xa0\x1a\xd3\xd0\xe3\xa5\xe2\x6c\xa4\x23\x08\x2c\x3d\x0a\xd9\x48\x3b\x9b\x73\x60\x67\x15\x65\x47\xa9\x90\xa5\x5d\xe0\x63\xb1\x65\xda\x2d\x6f\x5a\xd3\x28\xc0\x6b\xdb\x72\x5d\xc9\x16\x90\x25\x97\x42\x80\x9b\xef\x53\x47\x82\x21\x07\x2b\xa8\x24\xbd\xbd\xd2\x65\xeb\x9e\xed\x09\x9e\x38\x4a\xa2\xf3\x62\x08\x9e\x6c\x71\x3d\x9f\x51\x4d\x43\x92\xb4\xd1\x23\x87\x34\xc1\x2f\x9c\xdf\x16\x1d\x2b\x5f\x2e\xe9\xcc\x1e\x34\x56\x74\x63\xa0\x51\x38\xb0\x30\xaa\xaa\xee\xc6\x38\x6b\xa8\xb3\x77\xe9\x71\xf1\xeb\x71\x46\x48\x19\xa5\xa5\xa7\x1e\xd3\xae\x80\x38\xba\x30\x7a\x65\x57\x5e\xab\x9c\x88\x1e\xd1\x4d\x6a\xc0\xfe\xed\x53\x12\x71\xfc\x09\x27\x24\x7d\xaa\xd8\x10\xdb\xe8\x37\xcc\xb3\x39\xa5\x2e\x8a\x57\x38\x9e\x4c\x43\x99\x33\x02\x47\xb4\xb7\x6e\x7c\xa2\x98\x54\x60\xc7\x11\x64\xe3\xb4\xc9\x4e\x71\x75\x40\xe8\x52\x81\x86\xa8\x9d\x6f\xe2\x91\x29\xe3\xb0\x15\xab\x43\x7e\xea\xb9\x12\xd7\x8d\xfd\x4b\xd4\xed\x52\xba\x9c\x28\x8e\xc3\x11\x85\x6a\x9f\xc6\xe0\x15\x97\xa3\x2b\x18\x10\x05\x9e\x60\x5d\x4f\xc2\x03\x68\x4a\x23\x0d\xf6\x79\xc6\x8a\xa7\x75\x4a\xaf\xe0\xaa\x92\x35\x9f\x55\xf7\x87\x4b\xb6\x1c\x4f\x73\x9b\xcd\xf9\xaa\xc0\x34\x74\x59\xe4\x65\x71\xf0\x3b\xc3\x29\x9f\x24\xea\x52\x08\xe9\x85\xbe\x63\xb0\x51\xd8\xad\x8d\x0a\xf3\x5f\x2f\x92\xeb\xe1\xfe\xbe\x62\x38\xa3\xb4\xa9\x9c\xee\xff\x37\xe7\xf5\x93\xd8\xb7\xfb\x76\x7f\x6b\xfd\xc6\xa6\x6e\xe5\x22\xe6\x3a\xd8\x23\x14\xfb\x9a\xe6\xfb\xe9\x98\xe6\x1f\xf3\x59\xd3\xd9\x30\xb5\x6f\x4d\xeb\x18\x37\xc6\x4d\xf3\x8e\xf5\x65\x61\x57\x19\x05\x5d\x58\x36\xf0\xd5\xdf\xad\x2b\xae\x34\x56\x7d\x69\x1a\xfa\x22\x7a\x2c\x70\x69\x18\x74\x1b\xe7\x9c\xc7\x0a\x62\xa1\x17\x96\x9e\x7e\x8d\x49\x50\x5b\x63\x73\xbe\xfe\x60\xee\x1e\xda\x87\x4f\xed\xfe\xce\xfc\x09\x00\x00\xff\xff\xfd\xe5\x1e\x8b\x76\x04\x00\x00")

func templatesMavenHelmChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesMavenHelmChartYaml,
		"templates/maven/.helm/Chart.yaml",
	)
}

func templatesMavenHelmChartYaml() (*asset, error) {
	bytes, err := templatesMavenHelmChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/maven/.helm/Chart.yaml", size: 1142, mode: os.FileMode(438), modTime: time.Unix(1647937526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMavenHelmTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x4b\xc3\x40\x10\x85\xef\xfd\x15\x8f\xd0\x83\x1e\xb2\xd5\x6b\xa1\x27\x15\x11\xa4\x2d\x41\xbd\x88\xc8\x74\x33\x36\xab\xc9\xee\x92\x99\x88\x25\xec\x7f\x97\x2c\xc1\x43\x8f\xde\x66\xde\xc0\x37\x1f\xef\xda\xe0\x9e\x15\xda\x30\x28\xc6\xd6\x59\x52\x17\x3c\x9e\xab\x47\x1c\x4e\xe8\x07\xef\x9d\x3f\x4e\x67\x61\xd8\xd0\x75\xe4\x6b\x59\x2f\xc6\xb1\x84\xfb\x80\x0d\x5e\xc9\x79\x41\xb1\x0d\x35\xef\x43\xaf\x05\xcc\x0b\xb5\x03\x8b\x11\xee\xbf\x9d\x65\xa3\xa7\xc8\x48\x69\x01\xf0\x4f\x0c\xbd\x62\xbb\xbb\xbd\x7b\xdf\xef\xaa\xa7\xcd\xf2\xe2\x6b\x38\xb0\xd5\x16\x47\x56\x94\xa5\xa7\x8e\x25\x92\x65\x8c\x23\x4c\xc5\x2d\x93\xb0\xd9\xfe\xa5\x29\xa1\x0c\xf8\x94\xe0\x23\x69\xb3\x29\x46\x23\x91\xad\x99\xa8\xf2\x7a\xf5\x66\xfc\x2c\x91\x0a\xcc\xdf\x25\x93\x6e\x1a\xea\x35\x73\x90\xd2\xe5\x99\xc9\xc3\xfe\xcc\x63\xa2\xc8\xbf\x6c\x9c\x72\x97\x45\x44\x49\x07\x31\x54\xd7\x3d\x8b\x70\xce\xe6\x25\x15\x59\xc0\x36\x01\x8d\x6a\x5c\xaf\x56\xcb\x71\xf6\x48\xeb\x79\x9c\xca\x49\xb9\x63\xf6\xf5\xd4\xdd\x6f\x00\x00\x00\xff\xff\xa0\x01\x8b\xe1\xa5\x01\x00\x00")

func templatesMavenHelmTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesMavenHelmTemplatesNotesTxt,
		"templates/maven/.helm/templates/NOTES.txt",
	)
}

func templatesMavenHelmTemplatesNotesTxt() (*asset, error) {
	bytes, err := templatesMavenHelmTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/maven/.helm/templates/NOTES.txt", size: 421, mode: os.FileMode(438), modTime: time.Unix(1647512303, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMavenHelmTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\xcf\x8e\xd3\x30\x10\xc6\xef\x79\x8a\x79\x81\x06\xf6\x86\x72\xed\x8a\x13\x8b\x22\x40\x2b\x71\x42\xb3\xee\x6c\x63\x31\xf6\x58\xf6\x34\xa8\x2a\xfb\xee\xc8\x49\xda\xda\x1b\xba\xe0\x5b\xe7\xcf\xef\xfb\xfa\xd9\xc1\x60\x1f\x29\x26\x2b\xbe\x03\x0c\x21\xbd\x1b\xef\x9a\x9f\xd6\xef\x3a\xb8\xa7\xc0\x72\x74\xe4\xb5\x71\xa4\xb8\x43\xc5\xae\x01\xf0\xe8\xa8\x83\xd3\x09\xda\xed\x80\x51\xdb\xcf\xe8\x08\x5e\x5e\x96\x4e\x0a\x68\x96\xf6\x23\xf2\x81\x52\x7b\xa9\xce\x43\x8c\x4f\xc4\x29\x83\x20\xeb\xfd\xb8\x85\x4b\x81\x4c\x9e\x8a\x14\xd8\x1a\x4c\x15\x73\x29\x6e\xe5\xe0\x75\xc6\x26\x62\x32\x2a\x71\x06\x3b\x54\x33\x7c\x2a\x94\xde\xd6\x02\x50\x72\x81\x51\x69\x59\x2f\xfe\x6e\x3e\x5c\x91\xfe\xc5\x02\x38\x7b\xcf\xe7\x74\xda\xc0\x2f\xab\xc3\xc5\xbb\x75\xb8\xa7\xfe\xc0\xfc\x95\x4c\x24\x4d\xe7\x25\x80\xd7\x9d\xab\x60\x86\xa8\x7c\x47\xc7\xd0\xc2\x6f\xf0\xd6\xef\xc8\x2b\x7c\xb8\xee\xe6\x09\xf2\xbb\x6b\xc1\x88\x57\xb4\x9e\x62\x81\xd9\xbc\x71\x79\xe7\x33\x99\xa8\xc2\x9e\x2a\x37\x06\xb3\xdb\x5e\xd8\x9a\xe3\x7a\xa5\x0d\x97\x66\xbd\xb9\x8a\x84\xfc\x58\x4f\x90\x1f\xbb\xe2\xe7\xcd\x00\xee\xde\xaf\xc9\x55\x0a\x0b\xec\x63\x14\x57\x03\x37\x39\xa0\x67\xbb\x7f\xc0\xf0\x85\x9e\xeb\x5e\x3e\x73\x50\x7b\x96\x27\xe4\x0d\xf9\xb1\x18\x08\x12\xcb\xbb\x29\x83\x1d\x54\xc3\x2b\xd4\xe5\x1e\x7a\x89\x5a\x85\x94\x28\x8e\xd6\x50\x9b\x79\xb5\xe3\x49\x25\x8a\x8a\x11\xee\xe0\xdb\xb6\x2f\x7a\xa3\xf0\xc1\xd1\x43\x7e\xf9\x2b\x13\x2e\x57\x7b\xd4\xa1\xd6\x19\x30\x52\x40\x1d\xd6\x22\xb3\xeb\x69\xa0\x29\xf1\xd5\x9b\x19\x24\xcd\xd0\x6a\x39\xfc\xb7\x8c\x1e\x03\x75\x70\x6f\xe3\xf4\x81\x1e\x9b\xbf\xcb\x37\xcd\x9f\x00\x00\x00\xff\xff\xc1\xea\x9f\xb5\x8a\x04\x00\x00")

func templatesMavenHelmTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesMavenHelmTemplatesDeploymentYaml,
		"templates/maven/.helm/templates/deployment.yaml",
	)
}

func templatesMavenHelmTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := templatesMavenHelmTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/maven/.helm/templates/deployment.yaml", size: 1162, mode: os.FileMode(438), modTime: time.Unix(1649228635, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMavenHelmTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x8a\xc3\x30\x0c\x45\xf7\x39\x85\x2e\x30\x86\xd9\x7a\x9b\xfd\x10\x98\x92\x6d\x51\x1d\xd1\x98\x3a\xb6\xb0\xd5\x40\x09\xb9\x7b\x71\xec\x96\x16\x1a\xea\x9d\xff\x7f\x3c\x49\xc8\xb6\xa7\x98\x6c\xf0\x1a\xe6\xdf\xe6\x62\xfd\xa0\xe1\x9f\xe2\x6c\x0d\x35\x13\x09\x0e\x28\xa8\x1b\x00\x8f\x13\x69\x58\x16\x50\xed\x88\x51\xd4\x1f\x4e\x04\xeb\x5a\x9b\xc4\x68\x6a\xdd\xa3\xbb\x52\x52\xcf\xb4\x40\x0e\x4f\xe4\x52\x16\x01\x20\xf3\x71\x4f\x97\x98\x4c\xa6\xe4\xc6\xef\xbe\x54\x76\x52\xb9\x28\x4a\x0e\x51\xaa\xf1\x67\xfb\x7c\xe4\x73\x51\xf8\xfc\x04\xe3\x99\xa4\xdb\xe0\x51\x84\x6b\xcc\x31\x48\x30\xc1\x69\x38\xb4\x5d\xcd\xca\x86\x2f\x90\x0f\x03\x75\x7b\x63\x1e\x65\x19\x95\xc8\x91\x91\x10\xbf\xdf\x7b\x0f\x00\x00\xff\xff\xe0\x24\x6f\x5a\x80\x01\x00\x00")

func templatesMavenHelmTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesMavenHelmTemplatesServiceYaml,
		"templates/maven/.helm/templates/service.yaml",
	)
}

func templatesMavenHelmTemplatesServiceYaml() (*asset, error) {
	bytes, err := templatesMavenHelmTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/maven/.helm/templates/service.yaml", size: 384, mode: os.FileMode(438), modTime: time.Unix(1648001011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMavenHelmValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x51\xcb\x8a\xdb\x40\x10\xbc\xf7\x57\x14\xeb\xb3\x14\x6f\x72\x71\xe6\x26\x76\xc9\x49\x49\x0c\xf6\x06\x92\x10\x96\xf6\x4c\xcb\x6a\x18\x69\xc4\x3c\xb4\xe8\xef\x83\xd6\x0a\x18\x72\xad\xae\xea\xaa\xea\xde\xe1\x59\x3a\x2e\x3e\x63\x66\x5f\x24\xa1\x0b\x11\x56\xad\xab\x9c\xcc\xd5\x20\x39\xaa\xad\x92\xc4\x59\xad\xd4\xb4\xc3\xb9\xd7\x04\x4d\x60\xfc\x6c\xbe\xb6\x55\x17\xe2\xc0\x39\x8b\x43\xa7\xfe\x9d\xf0\x2c\xd6\x73\x14\xcc\x1c\x95\x2f\x5e\x12\x72\xc0\x45\x30\x71\x4a\xe2\xa0\x63\x0e\x58\x42\x89\xc8\x32\x4c\x9e\xb3\xa4\x9a\x28\xca\xe4\xd5\xf2\x53\x28\x63\x36\x78\x24\x1d\xf8\x2a\x86\x80\x91\x07\x31\x70\x65\xb8\x10\x30\x15\xef\x8f\xc1\xab\x5d\x0c\x1a\xff\xc6\x4b\x22\x60\x87\xef\xb3\xc4\xa8\x6e\x75\xea\x05\xef\x52\x64\xbe\xe2\xad\x0f\x49\xe0\xb6\x7a\x7a\x1b\xdb\x9e\x63\x06\x4f\xd3\x0f\x89\x49\xc3\x58\x13\xe8\x66\x77\x2c\xde\x9f\xc4\x46\xc9\xc9\xe0\xf7\x1f\x5a\xad\xff\xad\x36\x78\x78\xa0\xae\x78\xff\x1f\x48\x44\xdb\x75\xd6\xb8\x79\x99\xc4\xe0\x5b\x70\x72\x0c\x31\xaf\x91\x43\xcc\x06\x87\xfd\x61\xbf\x96\xd9\x70\x83\x4f\xfb\xc7\x8f\x9f\x89\x64\x9c\x57\x55\xb5\xd5\x3c\xff\x22\x00\xb7\x47\x18\x34\x49\xf9\xc3\xa9\xe7\xf1\xda\xb3\xde\xb1\xda\xa7\xd7\xa6\x6d\xef\x99\x32\xbe\xbe\x9c\xea\x97\xf3\x97\xea\xb0\xe6\xf9\x1b\x00\x00\xff\xff\x97\x1b\x16\xa3\xd3\x01\x00\x00")

func templatesMavenHelmValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesMavenHelmValuesYaml,
		"templates/maven/.helm/values.yaml",
	)
}

func templatesMavenHelmValuesYaml() (*asset, error) {
	bytes, err := templatesMavenHelmValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/maven/.helm/values.yaml", size: 467, mode: os.FileMode(438), modTime: time.Unix(1649208905, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMavenDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x31\x6b\xc3\x30\x10\x46\x77\x83\xff\x83\xa0\x5b\xc0\xba\x74\x33\x5d\x5b\x17\x42\x69\x64\xdc\x40\x9b\xf1\x2a\x5f\x8d\x1c\xd9\x32\x77\xc2\x41\xff\xbe\xa8\x53\x33\x98\x8c\x1f\xbc\x8f\xf7\x5e\x3b\xf3\xae\x98\x06\x27\x91\x93\x1e\x28\x5c\x31\x69\x1b\x26\x18\xfb\x0b\x58\x9a\x63\x90\x8a\x65\x72\x52\x8d\xfd\xe5\xe9\x51\xd7\x65\x51\x16\x9f\xa6\x7b\x7b\x39\x74\x0a\x56\x64\x90\x25\x04\x0f\x7f\x0c\x08\xf1\xea\x2c\x65\xe6\xd9\xb4\x67\x15\x91\x07\x8a\xb0\xd3\x23\xf2\x26\x0d\x57\xfa\xc6\x65\xc9\xcc\xed\xcd\x7a\x14\x21\x81\x9d\x4e\x38\xf9\xed\xbf\x0d\xf3\x8f\x1b\xa0\x2c\x1e\xd4\x8d\xb5\xa2\xd9\x72\x5a\x22\xf5\xda\x3b\x7b\xd7\xef\x9d\xcd\xe1\xcd\xf1\xd4\x9d\x5b\x73\x38\x9e\xd4\x88\x2b\xaa\x2a\xb7\xff\x4f\x2c\x8b\xe6\xab\x35\x1f\x8d\xaa\xf7\xf5\x3e\xcf\xdf\x00\x00\x00\xff\xff\x82\x81\xea\xb1\x44\x01\x00\x00")

func templatesMavenDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesMavenDockerfile,
		"templates/maven/Dockerfile",
	)
}

func templatesMavenDockerfile() (*asset, error) {
	bytes, err := templatesMavenDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/maven/Dockerfile", size: 324, mode: os.FileMode(438), modTime: time.Unix(1647827889, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMavenJenkinsfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\x6f\x8f\xdb\xc6\xd1\x7f\xef\x4f\x31\xe1\x73\x88\x74\x8f\x8e\xe4\x39\x09\x92\xe7\x91\x41\x17\xe7\x8b\x7c\x56\xe3\xbb\x73\x75\xe7\x14\x81\x73\x38\xac\xc8\x91\xb4\x3e\x72\x49\xef\x2e\x65\x2b\x8e\x80\xf4\x4f\x10\x04\x69\xe3\xa6\x01\x92\x02\x45\x03\xb8\x2d\x90\xbe\x28\x52\xe4\x4d\x0a\x38\x29\xfa\x65\x22\xc7\xfe\x16\xc5\xee\x92\x92\xee\x74\x92\x48\xc5\x49\xd7\xc0\x59\x24\x77\x66\xe7\xcf\x6f\x67\x86\xb3\x4c\x68\x82\x21\x65\x08\xf7\x2f\x00\x00\xe9\x22\x93\xe6\x27\x00\x8b\x03\xcc\x7f\x03\x84\xa4\x8d\x21\x54\x6e\x23\x3b\xa1\x4c\xd8\x7a\x66\xc5\x3c\x1c\x5e\xd0\x7f\xf4\x85\xe4\xb4\xdb\x45\x2e\x26\x84\xe0\xf3\x98\x41\x65\x13\x5e\x82\xff\x55\xff\x2a\x66\xe2\xf0\x82\xf9\x5f\x48\xd2\xc5\xe9\xe9\xfa\x46\xb5\x72\x25\xa5\x61\x50\x59\x9f\x7a\x60\x1e\x62\x22\xce\xdc\x03\xd7\x85\x2e\x95\xe0\x73\x0c\x90\x49\x4a\x42\xd1\x0c\xea\x50\xe9\x52\xe9\x87\x31\x43\x5e\xd9\x80\x94\x87\x75\xa8\xf4\xa4\x4c\xea\xae\xdb\xa5\x32\x24\x6d\xa7\x8b\xf1\x5d\x32\x70\xfc\x38\x72\x7d\xea\x07\x76\x80\x7d\x37\xc0\x28\xb6\xf5\x55\x3f\xc5\xdb\xc2\xe9\xd2\x5c\xc9\xb1\x36\x31\x93\x84\x32\xe4\xd5\xca\xed\xe0\x64\x46\x40\x2d\xa4\xcf\x69\x22\x67\xef\x03\x40\x80\x1d\x25\x6b\x93\x75\x62\x8f\xe1\x5d\x88\x79\xd7\x51\xcb\x39\x3b\xe6\x66\x75\xfd\x3c\xaa\x8c\xc2\x49\x08\x17\xb8\x43\xe5\xe2\x59\x7e\x1c\x45\x31\x6b\xb0\xfe\x39\xd3\x86\x17\xce\x5c\x5e\x98\x73\x39\x9c\x21\x75\x5d\x90\x29\x67\xa0\xc5\x1d\x90\x28\x04\xca\x64\x0c\x63\x00\x19\x47\x9e\x75\xa3\xc0\x88\x30\x49\x7d\x5b\x72\xc2\x44\x27\xe6\x11\xf2\x62\x5e\x2d\x66\x6b\x58\x6c\x6f\x3d\x94\xd1\x7d\x7a\xda\xde\x6f\x90\x28\xdc\x6e\x9e\x6f\xc8\x69\xf9\x29\x93\xc8\x13\x8e\xb2\xb2\x3e\x7f\x01\x2d\x2b\x75\x94\x1a\xc7\x61\xdc\xad\x5a\x07\x12\x13\xb8\xe8\xc0\x93\xcf\xff\xf2\xf8\xb3\xdf\x8d\x2d\xf6\xf8\x93\xf7\xbe\xfd\xfa\x2b\x6b\xfe\xa2\x5a\x5a\x22\x89\x00\x0f\x38\x92\x40\x49\x09\x1d\x1a\x62\x1d\x2a\x63\x2e\x95\x0b\x0b\xe9\x5d\x17\x34\x4e\x20\x22\x34\xa4\xac\x0b\x21\x15\x72\x21\x05\xed\x54\xf5\xa2\x4e\x44\x68\x66\x70\x01\xcf\x79\xc0\xd2\x30\x5c\xa2\xb5\x1e\xbb\x5b\xcd\xeb\xcd\xbd\x9d\xe3\xeb\xcd\x83\x43\xf0\x94\x25\xfc\x98\xf9\x44\xee\x1a\x01\xae\x53\x21\x67\x17\x58\x6c\x04\x3d\xd0\xef\xc5\x60\xdd\x6a\xee\x5d\xdd\x3f\x7a\xfa\xcb\x2f\xbe\xfd\xfa\xab\xd1\x83\x8f\x9e\xbe\xf3\x8b\x6f\x1f\x3d\xaa\x5b\xcb\xc9\x13\x4e\x99\x0c\xd9\x29\xf1\x16\x52\xcd\x62\x7e\x7a\x8c\xad\xc4\x48\x84\x22\x21\x3e\x82\x57\xd8\x46\xb9\x2c\xd6\xad\x46\xab\xb5\xdf\x3a\x9a\xf0\xe0\x78\x27\xa5\x1c\x83\xe5\x0a\x89\x1e\x54\xf0\x1e\x95\x70\xb1\xb2\xa2\x1a\x79\xcc\x3d\x97\xbb\xc1\x7b\x14\x07\x69\x88\x76\x5b\x45\x5f\x3b\xe6\x01\x72\x5b\xc4\x7c\x29\xfa\x27\xa0\xd3\xf4\x40\x59\x27\x8e\x88\xa4\x31\x2b\xb9\x69\x5e\x70\xe0\xf1\xdf\x1e\x8e\xfe\xf4\xe9\x93\x7f\xff\xf1\xc9\xc3\xdf\x3c\xfe\xe0\xe3\xc7\xef\x7f\xf4\xf8\xc3\xdf\x8f\x1e\x3d\xb0\xd6\x17\x03\x5f\xa4\x6d\x61\xe0\x27\xe3\x24\x0e\xe3\x2e\x7d\x0b\x8d\xcb\x96\x10\xaa\xc8\xd6\x43\x98\x50\x81\x56\x1c\x38\x8a\x34\x94\xb9\xef\x16\xb2\xc8\xa0\x6a\x44\x7f\xfc\xd9\xaf\x47\x5f\x3f\x7a\xfa\xf0\xd1\xe8\xd1\x83\xa3\x25\x48\x55\xb1\x89\x82\x07\x17\x97\xce\x12\x78\x07\x3c\x6b\x31\xb7\x4e\xcc\xab\x22\x6d\x03\x65\xda\x1a\x05\x80\x29\xf0\x8e\xa7\xfe\xd4\xac\x35\xea\xc0\xad\xb5\xfb\x22\x6d\x6b\x84\x0f\x8f\xe0\x4d\xb6\x1c\x94\xb4\x56\xfb\x1e\x7b\x2a\xdf\x16\x02\xef\xcc\x77\x51\x01\xd4\x9a\x94\x67\x23\xeb\x17\x00\xaa\x4f\x42\x3f\x0d\x89\x44\x40\xd6\xa7\x3c\x66\x91\x2a\x7a\x22\x92\x94\x84\xea\x8b\x0e\x8c\xde\xfd\xfb\xe8\xdd\x2f\x47\x0f\xfe\xf0\xf4\xbd\x07\x4f\x3e\xfc\xe7\xe8\xc1\x27\x4b\x82\xfb\x38\x37\x7b\x70\xab\x7e\xb4\x18\xce\x6a\xbb\xb3\x3e\x5c\x56\x62\x3a\xf2\xde\xd9\x42\xe4\xcc\x50\xe9\xe2\x2a\x0d\xb1\x5a\xc9\xa7\xaf\x3b\x22\x09\xa9\xac\x5a\x6f\xf2\x9f\xbc\xc9\xac\x75\x07\x89\xdf\x9b\x93\x42\xa7\x86\xc6\x9a\x07\x74\x71\xce\xc8\xa1\xcb\x02\xbc\xe7\x81\x70\xf4\x8f\xfd\x4e\xd5\xf2\x96\x58\xc0\x44\x52\x43\xe7\xd9\x17\x8b\xe4\x97\x53\xf1\xf3\xe7\x5b\xad\xbd\xe6\xde\xce\x11\x44\x69\x28\xa9\xad\x4b\x0f\x65\xa6\x3e\xe1\x94\xb4\x43\x04\xc2\x11\x58\x2c\x81\x84\x61\x7c\x17\x83\x0d\x68\x93\x00\xd4\xb4\xba\x55\x5b\xae\xd4\x10\x43\x81\xc5\x64\x52\xfa\x9f\xe0\xc0\x13\x8e\xda\x6b\x92\x53\xd6\xad\x6e\x6e\x68\xcd\x0a\x24\xb7\x8c\x41\x9f\x84\x29\x9e\x62\xa1\x19\xd4\x2e\x16\x63\x31\xc6\x93\x93\xa4\xb2\x7a\x82\x83\x0d\xcd\xb0\x18\xf1\xc4\xa8\x3a\xc5\x5a\xb5\x13\x1c\xd4\x2c\xcf\xaa\x69\x1e\x4b\x2d\xb5\x60\x5b\x16\x79\xae\x60\xba\xb7\xb5\xdb\x38\xb8\xb1\xb5\xdd\x00\x0f\xce\x24\xd7\x45\xe1\x60\xde\xa3\x2c\x1a\xb4\x89\xf4\x7b\x59\x0a\x33\xf9\x48\x94\xaf\xde\x5e\xaa\xc3\x74\x34\x5f\x82\x6a\x15\x78\xa3\xa9\xb0\xbb\xd4\xfe\xd3\xb5\x0d\x8c\xbe\x79\x67\xf4\xf9\x07\x66\x21\xb3\x68\x1d\xd6\xee\x47\x26\x0e\x83\xb5\x9c\x9b\x51\xdc\x1a\xd3\x58\x45\x44\x00\x13\x0e\xa7\x83\x60\xc2\x31\x21\x1c\xd5\xef\x92\x08\xb2\x6a\x66\xe9\x1a\x58\x47\x70\x70\xf3\x0a\x1c\x1c\x36\x6e\xd4\xcf\x63\x5e\xa0\x72\x33\x31\x22\x72\x12\x22\x7b\x9e\x57\xb4\x0c\xcd\x86\xe8\x8d\xab\xac\xac\x1a\xd1\x7c\xe0\xbb\x6f\x1e\x8d\xfe\xfa\xe5\x25\x53\x41\x5d\x2a\x26\xc5\xe2\xec\x95\x8f\xcc\x97\x6b\xc6\x02\x47\xf0\xe4\x8b\x87\xdf\x7d\xf1\xe9\xe8\x5f\x1f\x8f\xde\xff\xad\x71\xe7\x77\x1f\xfe\x63\xf4\xe7\x5f\x99\x3c\xe1\x38\x4e\xb1\xc5\x55\x78\x68\xec\xbd\x0e\x1e\x44\x0e\xb2\x7e\x51\x7f\xaa\xf4\x56\x68\xae\xe6\x6a\x0a\xa6\x08\x79\x17\xab\xe3\x60\xb2\xd1\xd8\x7b\x7d\x7d\xc9\xf6\x3d\xbb\xa4\xc9\xa8\x41\xec\x9f\x20\x07\x49\xba\xc5\x2c\xc7\xfa\xce\xf6\xcd\x56\xab\xb1\x77\x78\xfc\xea\xfe\xf6\x6b\x8d\xd6\x71\x73\x77\x6b\xa7\x71\x7c\xb8\xb5\xb3\xac\xd6\xc9\x07\xed\x54\x15\x9b\x9d\xe6\xe1\xf1\x95\xd6\xd6\xde\xf6\x35\xcf\xb3\x22\x22\x24\x72\xab\x04\x6a\x96\x08\x03\x9e\x79\xdc\xdc\x7e\x35\x7f\xd6\x6a\xec\x34\x0f\x0e\x5b\x6f\xd4\xc0\x72\xad\xda\xd9\xf0\x55\xd3\x37\xb3\x3d\x61\xd5\xad\x1a\xe4\x42\x6e\xef\xef\xee\x36\x0f\x15\xd3\x67\x09\xc1\xc2\x59\xeb\xc7\x55\xd6\x78\x04\x6a\x96\x6d\xd5\x7e\x50\x03\x9c\x13\x89\xac\xa3\x2c\xbc\x4e\x40\x09\xa2\x17\xa7\x61\x00\x6d\xac\x43\x26\xe5\x3c\x23\x14\x42\xff\x29\xec\x13\x2e\x69\x87\xf8\x52\xbf\xb0\x2b\x09\x8a\x70\x98\x16\x61\xab\x75\xd8\xbc\xba\xb5\x7d\x78\x7c\xb5\x79\xbd\xa1\x52\xe3\x6c\x56\xd4\x86\x34\xfa\x19\xa3\x3e\x43\x4b\xcf\xb5\xc6\xfe\x95\x9f\x36\xb6\x0f\x8f\x6f\x6c\x1d\x5e\xf3\xcc\xb4\xdd\xe6\x5e\x73\x7f\x02\x0a\xcb\xe5\x18\x22\x11\xe8\x9a\xb5\xc7\x69\xbd\x66\xb9\x34\x22\x5d\x14\xee\x79\x92\xba\xe7\x49\x6a\x10\xb6\xd0\x2c\x35\xcb\x91\x84\x17\x8a\x0e\xe7\xf2\x99\xd6\xa7\xa4\x36\xb9\x8f\xa7\x44\x5f\xac\x4e\x51\x18\xf5\x30\x8c\xa6\xb3\xa5\x28\xac\xdd\xb5\xad\xd6\xe1\xb1\x92\xd1\x33\xb8\x28\x4a\xb8\x75\xe3\xc6\x2a\x64\xd7\x1a\xd7\x77\xc7\xb6\xf2\xac\xac\xa5\x7a\xf1\x95\x17\x9c\x8b\x2f\x3b\x2f\xbf\xec\xbc\xf8\x4a\xfd\xff\x37\xff\x6f\xb3\x40\xd1\x72\x3a\x76\x4f\x4c\xe6\x79\x96\xda\x4f\x42\x96\x88\xdf\x13\x4b\xbc\xde\x68\x1d\x34\xf7\xf7\x3c\x6b\xd3\xd9\x74\x36\x0b\x81\xa4\x44\xcd\x7f\xee\x52\xb3\x2a\x38\x1c\x93\x90\xf8\x58\xb5\x5a\x8d\xeb\x8d\xad\x83\x86\xb5\x61\x6d\x2e\x7f\x31\x82\xc5\xe5\xed\xd4\x50\x45\x4e\x55\xd9\x08\xec\x40\x97\x8a\xaa\xc4\x19\xba\x8e\x86\xd1\xf3\xcf\x43\xd5\x9f\xb9\x7d\x49\x60\x00\x36\x85\x8a\x70\xfb\xc8\x05\x8d\x59\x1d\xb4\x8d\x26\x97\x6b\xf7\x67\x94\x1b\xba\x15\xd8\xee\x11\x2e\x75\xeb\x71\x7d\x1d\xde\x7e\x1b\x24\x4f\x8b\x55\x71\xdf\x4f\x4a\x85\xca\x3a\x08\x12\x25\x21\x66\x17\x46\xc0\x1c\xb9\x3f\xba\x6c\xba\xd0\x1b\xc7\xe2\x5c\x9c\x71\x7c\x18\xc2\xe5\xcb\xe6\x85\x4e\x68\x89\x2e\x99\xca\x50\x47\xc0\xbd\x29\xf9\xe7\xa5\x9c\xe1\x69\xf2\x92\x0a\xa9\x28\xc2\x53\xa6\xca\x46\x92\x86\x12\xfc\x38\x40\x9b\x30\x12\x0e\x04\x15\xe6\x0d\xe1\xd9\xd4\xf4\x42\x12\x49\x7d\xcd\x1f\x72\xfe\xc5\xb6\xbb\xae\xea\x6f\x59\xe6\xcd\x4c\xc6\x71\x68\x1d\x95\xe9\x33\x67\x43\x79\x6e\xda\x39\x97\x92\xbb\x05\xba\xa7\xf9\x70\x5d\x88\x48\x1f\x19\x24\x3c\xbe\x8d\x7e\xb1\xf7\x9c\x39\xb2\x7b\x1e\x58\x9a\x59\xc9\x4a\x73\xd2\x6d\x55\xc4\xb6\x31\xa8\x7d\xca\x61\x73\x0f\x3b\x96\x8d\xbb\x54\xf6\x0e\x62\x46\xf8\xcf\xd2\x36\x36\x58\xbf\x0a\x94\x09\x49\xc2\x50\x77\x63\x0d\x0c\x2b\x42\x4d\xb8\x93\xb6\xd1\x16\xc8\xfb\xe6\x44\x46\x59\xe6\x8d\x38\x05\x9f\x30\x88\xfb\xc8\x39\x0d\x50\xf7\x45\x27\xe7\x6a\x20\x63\x68\x23\xa4\x02\x83\x95\x64\x33\xaa\x9f\x75\x5f\xd4\x67\xe0\x87\x48\x18\xf4\x91\xd3\xce\x00\xb4\x74\x75\xfd\xb7\xb8\x5f\xa7\x47\xb1\x92\x71\x85\xe9\xc5\x67\xba\x2e\xc4\xb2\x87\xfc\x2e\x15\x08\x24\x95\xb1\x1d\xa0\x44\x5f\x42\x48\x58\x37\x25\x5d\x04\x39\x48\x8a\x6d\x48\x58\xa5\xbe\x1f\x43\x6c\x6a\x6d\x3b\x5f\xfb\xd9\x22\x2e\x6b\x19\xfa\x84\x31\xe4\xd7\xe2\x08\xc1\x03\xb5\x41\x4e\xc1\xcc\x3c\xad\x5c\x5a\x15\x37\x33\xb0\x2e\x81\xea\x66\x07\x06\x71\x0a\x3d\xd2\x47\xf0\x63\xd6\xa1\xdd\x94\x63\x00\x51\xcc\x15\xc0\x15\xdc\x19\x42\x37\x8c\xdb\x24\x04\x43\xa9\xa6\x31\xf4\x15\xef\x0d\x4d\xab\x36\x85\x48\xd0\x57\xf0\xa4\x52\xe8\x24\x50\xf0\xfd\x78\xce\x98\xd9\x06\x3a\x57\x68\x15\x9c\x2c\x34\xbd\x86\x03\x6f\xd2\x06\xba\x6c\x1e\xda\xd9\x43\x35\x29\x41\x2e\x29\x8a\xd5\x36\xc9\x5c\x41\xdc\x3e\xe1\x6e\x48\xdb\xee\xd8\x9e\x6e\x9b\x32\x73\x95\x3b\x72\xd5\x25\xff\xcb\x3b\xf3\x87\x78\x99\xce\xbb\x3f\xb9\xa3\xf2\xb7\x4e\x15\x3a\x2b\x93\x74\x51\x81\xcc\x61\x03\xdd\x9d\xee\xc4\x29\x0b\x36\xc4\x09\x4d\xf2\x44\x3a\xc8\x12\x69\x31\x3d\x0a\xb7\xf7\x54\x49\xa0\xaa\x09\x3b\xc0\x0e\x65\x18\x9c\x3d\xa7\x5f\x34\x96\x96\x02\xd9\x69\x9f\x48\xdb\x86\x2d\xe0\x3d\xf4\x53\xb5\x6d\x4a\x14\x04\x4e\xf6\x09\x48\xd9\x4a\xc0\x75\xf5\x72\x80\x7d\xe4\x83\x6c\x7d\xca\x32\x99\x0a\xf2\xd0\x07\x66\x9a\x2a\x93\xa2\x64\xcb\xe8\x7c\xdf\x6b\x56\xaa\xda\x13\x59\x3b\xb6\x0c\xcf\x71\x2f\x57\x4c\x7a\xb9\x25\xc8\x73\xad\xfc\x28\xd0\xfd\x68\x47\xf4\x50\x1b\x75\x85\x1d\xeb\xba\x60\x0e\x25\x74\x5b\x5b\x52\xa9\x5d\xab\xd8\xfa\xd1\x4a\x15\x80\x12\x4a\x37\x1c\xc7\xfc\x50\x09\xba\xa1\x5b\x91\xc5\x0e\x2d\x66\x24\xd4\x18\xd0\x4a\xae\x22\xd1\x4c\xf4\x5b\xbb\xef\x47\x41\x39\x8f\x41\xd9\xc0\x56\x74\xf2\xb3\x0c\x6a\x33\x47\x04\x35\xcb\xe6\x28\xe2\x94\xfb\x68\xfb\x71\x32\x28\x85\x33\xd7\x05\x45\x03\x39\x87\x62\xf1\x04\xf2\x1d\x3f\x26\x7b\xae\x6c\x77\x1f\x32\x78\x73\xf3\x95\x01\x4c\xf1\x2a\xbf\x4f\x94\x30\x8a\x91\x63\x38\x18\x61\xd4\xcb\x9f\xbe\xa9\xcc\x74\xe6\x56\x40\x85\x1c\x8b\xbc\x52\x0a\x9c\xad\x7e\x4f\x02\xca\xc1\x4e\xc6\xed\x43\xe1\xae\xdd\x1f\x2f\x36\x2c\x18\x47\x57\x58\x66\xb5\x14\x3e\x5b\x2d\xa8\xda\xc0\x4f\xc0\xe6\x1d\xc8\x04\x37\xd6\x1c\xce\xd5\xa8\xec\x9a\xe5\xfa\x33\xa7\xc6\x6c\x80\x36\x27\x43\x6d\x12\x28\x18\x45\x44\x2a\x10\x8d\x21\xb4\xba\x4d\xcc\xb1\xd2\x0a\xba\x95\xa2\x28\x37\x7b\xc6\x57\x10\xf5\x27\x4e\x39\xd3\x8c\x98\xe9\xb2\x0e\x2f\x81\x24\x1c\xfc\xb7\xfa\x9d\xa5\x53\x1d\x49\xb8\xd3\x7d\x6b\xe9\x3c\xb7\x9c\x81\xce\x51\xc0\x07\x3f\xf9\xbe\xe2\x4c\xf5\x7f\x95\x44\x25\x6a\xcc\x62\x73\x17\xcd\x5b\xec\xc1\x79\x94\xea\xfe\x9c\x07\x8b\xef\x9c\xbe\x4a\x62\x71\xce\x67\x92\x22\xf5\x7d\x14\xe7\x7d\x7f\x39\x1e\x66\x1b\xe5\x13\x75\x51\x0b\xb7\xe3\xf6\x02\x6f\xba\xee\x64\x5a\x1d\x2a\x5c\x44\x54\x1c\xeb\xbf\x76\x9b\x08\xea\xeb\x57\x34\xea\xa3\x6b\x8e\xea\x2a\x1b\xaa\x3a\x26\x5d\x22\xb1\xae\x5b\x5e\x1b\x70\x97\x50\x69\x7e\x2f\xd1\x51\x8d\x0e\xa1\x61\xca\x71\x81\x0e\xe6\x23\xd1\x25\xaf\xb8\xfa\x4b\xd1\x98\x49\x64\xd2\x8b\x08\x0d\xb7\xcd\xef\xea\xf2\x0f\xc8\x04\xb2\x00\x50\xd1\x80\x8c\x21\xc0\x3e\x86\xaa\xda\x5f\x9c\x17\x33\xb3\x9e\x22\x9d\xfe\x6a\xf3\xd6\xe4\x13\x65\xc7\x67\x47\xaa\xa2\x9c\xfe\x98\x71\x49\x28\xd5\x2c\xf1\x9e\x84\x76\x1c\x0c\xea\x60\xad\x65\x9a\x59\x1b\xaa\x9c\x53\xef\x90\x75\xa8\xac\xdd\x68\xed\xeb\xdd\xa0\xcf\x9b\x6c\xd0\x9f\x5d\xc3\xff\xc0\xda\x95\x9b\xcd\xeb\xaf\x1e\xef\xdd\xdc\xbd\xd2\x68\x81\x9d\x5f\x1f\x1c\x6e\x1d\xde\x3c\x78\xae\xb2\x01\x32\x56\x2c\x8b\xca\x53\x1c\xa7\xc3\xfc\xf3\xf0\xe1\x7f\x02\x00\x00\xff\xff\x18\xa0\x1d\xb7\x9b\x2e\x00\x00")

func templatesMavenJenkinsfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesMavenJenkinsfile,
		"templates/maven/Jenkinsfile",
	)
}

func templatesMavenJenkinsfile() (*asset, error) {
	bytes, err := templatesMavenJenkinsfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/maven/Jenkinsfile", size: 11931, mode: os.FileMode(438), modTime: time.Unix(1653471021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMavenCicdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5d\x6f\x1b\x45\x14\x7d\xb7\xe4\xff\x30\xda\xfa\x29\xd2\xec\xbc\x6f\x55\xc4\x62\xb6\x89\x21\x8e\x23\xc7\xad\x84\x54\xc9\x1a\xcf\xde\xac\xa7\xd9\x2f\x66\x66\x6d\x8c\x65\x09\xd1\x20\x5a\x08\x0d\x2f\x28\x21\x24\xa0\x40\x2b\x22\x44\x29\x48\x55\xf8\x08\x52\xfe\x4c\xd6\x76\x9e\xf8\x0b\x68\xbd\x76\x12\xbb\xb6\x93\xca\x2f\xde\x7b\xcf\x3d\xf7\x9c\xbb\xf7\xae\x4f\x3d\x30\x90\x0d\x5e\x80\x19\x67\x76\x36\x93\x04\x64\x48\x19\x18\x28\x09\x60\x1b\x1a\xd9\xcc\x2d\xd4\xfd\x7e\x33\x3e\xf9\x27\x7e\xf6\x47\xff\xd5\xf3\xee\xce\x71\x6f\x6f\xf3\xfc\xd3\xdf\xce\x4e\x8e\xcf\x3f\xd9\xeb\xfd\xf0\x3c\x7e\xbc\xd3\x3f\x3c\xca\x66\x3c\xca\x7d\x45\xb9\x0f\x42\x1a\xd9\x0c\x42\x18\xb9\x7c\x1d\x7c\xe7\x43\x4e\xfd\x6c\x26\xa4\xaa\x6e\x20\x3d\xa1\xeb\x3d\x7d\x19\xff\xf8\x28\xde\xde\x3d\xff\x7c\xfb\xbf\x7f\xb7\xe2\x17\x5f\x77\x8f\x0e\xe3\x83\x9d\x78\xfb\x65\xef\xe4\xe7\xee\x93\xd3\x6c\xa6\x16\x71\xd7\xc6\x2a\x08\x5c\x03\x79\xb4\x01\x7e\x36\x03\x7e\x63\x40\x9b\x2f\x15\x8b\xa5\x95\xea\x7d\x73\xf9\x9e\x65\x20\xad\xae\x54\x68\x10\xe2\x70\xe5\xd2\x9a\xee\x40\xd0\xa4\x2d\x9d\x05\x1e\x19\x19\x20\x1b\x51\x0d\x84\x0f\x0a\xe4\xc0\x25\x66\x81\xe7\x05\x3e\xc1\x44\xd0\x26\xf1\xa8\x54\x20\x48\x1d\x5c\x8f\xa4\x09\xbd\x45\x3d\x57\xcb\x66\xbc\xc0\x8e\x5c\x18\x59\x49\x47\xa5\x79\xa0\x04\x67\x58\x82\x68\x70\x06\x5a\x92\x43\x28\xb5\x36\x9e\x4a\x33\x53\x6c\x24\xe1\x5b\x28\xfe\xe9\xf7\xee\xee\xd3\xd4\x76\xff\xf4\xbb\xfe\xe1\x16\xe3\x84\xd9\xbd\xbd\xcd\xf8\xd9\xde\xd9\x5f\xbf\x48\x45\x9d\x21\xc7\xe0\x6f\x2a\x23\xad\x4d\xdf\x86\x1d\xb0\x0d\x10\xe7\xdf\xec\xc7\x8f\xb6\xe3\xbf\x8f\xcf\x4e\x0f\xe2\x17\xbb\xbd\x27\x8f\xbb\xfb\xbf\x76\xf7\xbf\x8a\xbf\x38\x8c\xbf\x3d\x1a\xd5\x8c\xe4\xa7\x35\xa3\x28\x42\xb2\x0e\xae\x6b\x5c\x3e\x27\x48\x2d\x05\xa5\xd2\x11\x56\x28\xd7\xce\xdf\x2b\x97\xad\x95\x4a\xf5\xdd\x52\xfe\x7d\xab\x5c\x2d\x14\xcd\x45\xab\x5a\x31\x17\x3b\x48\xd7\xa6\x17\x87\x91\xac\xcf\x2b\x9c\x51\x26\x69\x03\xe6\xf6\x7b\xeb\x4a\xd6\x2c\x57\x0a\x77\xcd\x7c\xa5\x7a\xb7\xb0\x6c\xad\x98\x45\xab\xa3\x2b\x2a\x26\x99\x3d\x86\x58\x78\x6d\xd5\xac\xa6\xa5\x77\xde\xb3\xf2\x95\xea\xaa\x59\x59\xba\xd4\x3c\x9a\x66\xb2\x33\xd7\xcc\x32\x59\x3d\xa6\x5c\xc4\x02\x7f\x9d\x3b\x28\x92\x80\x59\xe0\x2b\xf8\x48\x21\x1b\x1a\x93\x5a\x99\x8d\xf4\x84\xf4\xf6\x80\x1a\x85\x94\x6d\x50\x07\x5e\x1f\xf2\x25\x8e\x45\xc2\x45\x18\xdb\x54\x51\x5c\xe3\x3e\x15\x2d\xf4\x40\x7b\x3b\xd7\xce\x2f\x99\xe5\x4a\x75\x60\x0f\x8f\x9e\xee\x5b\xe5\xb5\x42\x69\xa5\xa3\x2b\xe7\xe3\x07\x1a\xca\xb5\x97\xac\xe5\x62\xb5\x6c\x2d\x16\xd6\x2a\xe5\x0f\x3a\x84\x86\x9c\xb0\x3a\x15\x4a\x4e\xf6\x1b\xa8\x11\x10\x06\x28\x0a\x6d\xaa\x00\xa5\x57\x76\x7b\x10\x8f\x42\x47\x50\x1b\x10\x5e\x4f\x86\x78\xe5\x36\x3b\x08\x63\x09\x0a\x71\x8f\x3a\xa0\x27\x23\xbb\x33\xef\xd5\xa6\xe0\x8b\x0f\xd0\x9d\x5c\x3b\x91\xbf\xb6\x6a\xe6\xad\x0e\xca\xb5\xcd\xd5\xd5\xd4\xcf\xb0\x39\x19\x33\x89\x30\x6e\x80\x90\x3c\xf0\xd1\xa4\x5d\x84\x31\xf7\xa5\xa2\x6e\x72\xd3\xa3\xf3\xeb\x7e\xf9\x67\xff\xd5\xc1\x43\x2a\xe2\xad\xcf\xd2\x98\x00\x19\x44\x82\x5d\x39\xb4\x8b\x9b\x7f\x38\xb6\x55\x29\xcc\x40\x9a\xa2\xc2\x01\x45\x16\xc0\x67\xa2\x15\x2a\xb0\xf5\x71\xa0\xcd\xa5\x32\x90\xf6\xda\xda\x68\x2e\x67\x37\xe3\x1b\x07\xce\xe4\x6b\x79\x2e\xa6\x61\xe8\x72\x46\x15\x0f\xfc\x39\xdc\xcc\xa5\x52\x82\x24\xe9\x3a\x92\x2b\x45\x7a\x6b\xf0\xcd\x9b\xe8\x95\xe2\xa6\x77\xac\x05\x81\x92\x4a\xd0\xf0\xe6\xfd\x2e\x4a\xde\xac\x5b\x8d\xca\xfa\xb4\x26\x36\x84\x6e\xd0\x22\x49\x9a\x2c\xe8\x63\x98\x99\xb3\x4a\xae\x4f\xf0\xda\x1c\xba\x21\x22\x61\x1c\xfb\xc8\xcf\xa5\x6d\x0a\x1a\x86\x30\x75\x4d\x86\xb4\x43\x04\x59\xb8\x91\xca\xa6\x3d\x4f\x61\xd3\x9e\x41\x93\xfc\xfe\x0f\x00\x00\xff\xff\x8e\xc7\xe2\x9e\xd4\x07\x00\x00")

func templatesMavenCicdYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesMavenCicdYaml,
		"templates/maven/cicd.yaml",
	)
}

func templatesMavenCicdYaml() (*asset, error) {
	bytes, err := templatesMavenCicdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/maven/cicd.yaml", size: 2004, mode: os.FileMode(438), modTime: time.Unix(1650350367, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmHelmChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x6f\xdb\x3c\x10\xde\xf9\x2b\x0e\xd1\xe0\xf7\x05\x0a\xc5\xe9\xd0\xc1\x5b\xb6\x16\xed\xd6\xa0\x3b\x4d\x3e\xb2\xae\xa1\x48\x96\x3c\x39\xd5\xbf\x2f\x4e\xb2\x1c\xc5\x05\x82\x8e\xe4\x1d\x9f\xaf\x3b\xc9\x66\xfe\x81\x52\x39\xc5\x03\x9d\x3f\x9a\x68\x07\x1c\xa8\xda\x21\x07\x18\x8f\xea\x0a\x67\x99\x8b\x8f\xf4\x19\x61\x20\xd7\xdb\x22\xd4\xa5\x42\x5f\xc7\x23\x4a\x84\xa0\x1a\xd3\xd0\xe3\xa5\xe2\x6c\xa4\x23\x08\x2c\x3d\x0a\xd9\x48\x3b\x9b\x73\x60\x67\x15\x65\x47\xa9\x90\xa5\x5d\xe0\x63\xb1\x65\xda\x2d\x6f\x5a\xd3\x28\xc0\x6b\xdb\x72\x5d\xc9\x16\x90\x25\x97\x42\x80\x9b\xef\x53\x47\x82\x21\x07\x2b\xa8\x24\xbd\xbd\xd2\x65\xeb\x9e\xed\x09\x9e\x38\x4a\xa2\xf3\x62\x08\x9e\x6c\x71\x3d\x9f\x51\x4d\x43\x92\xb4\xd1\x23\x87\x34\xc1\x2f\x9c\xdf\x16\x1d\x2b\x5f\x2e\xe9\xcc\x1e\x34\x56\x74\x63\xa0\x51\x38\xb0\x30\xaa\xaa\xee\xc6\x38\x6b\xa8\xb3\x77\xe9\x71\xf1\xeb\x71\x46\x48\x19\xa5\xa5\xa7\x1e\xd3\xae\x80\x38\xba\x30\x7a\x65\x57\x5e\xab\x9c\x88\x1e\xd1\x4d\x6a\xc0\xfe\xed\x53\x12\x71\xfc\x09\x27\x24\x7d\xaa\xd8\x10\xdb\xe8\x37\xcc\xb3\x39\xa5\x2e\x8a\x57\x38\x9e\x4c\x43\x99\x33\x02\x47\xb4\xb7\x6e\x7c\xa2\x98\x54\x60\xc7\x11\x64\xe3\xb4\xc9\x4e\x71\x75\x40\xe8\x52\x81\x86\xa8\x9d\x6f\xe2\x91\x29\xe3\xb0\x15\xab\x43\x7e\xea\xb9\x12\xd7\x8d\xfd\x4b\xd4\xed\x52\xba\x9c\x28\x8e\xc3\x11\x85\x6a\x9f\xc6\xe0\x15\x97\xa3\x2b\x18\x10\x05\x9e\x60\x5d\x4f\xc2\x03\x68\x4a\x23\x0d\xf6\x79\xc6\x8a\xa7\x75\x4a\xaf\xe0\xaa\x92\x35\x9f\x55\xf7\x87\x4b\xb6\x1c\x4f\x73\x9b\xcd\xf9\xaa\xc0\x34\x74\x59\xe4\x65\x71\xf0\x3b\xc3\x29\x9f\x24\xea\x52\x08\xe9\x85\xbe\x63\xb0\x51\xd8\xad\x8d\x0a\xf3\x5f\x2f\x92\xeb\xe1\xfe\xbe\x62\x38\xa3\xb4\xa9\x9c\xee\xff\x37\xe7\xf5\x93\xd8\xb7\xfb\x76\x7f\x6b\xfd\xc6\xa6\x6e\xe5\x22\xe6\x3a\xd8\x23\x14\xfb\x9a\xe6\xfb\xe9\x98\xe6\x1f\xf3\x59\xd3\xd9\x30\xb5\x6f\x4d\xeb\x18\x37\xc6\x4d\xf3\x8e\xf5\x65\x61\x57\x19\x05\x5d\x58\x36\xf0\xd5\xdf\xad\x2b\xae\x34\x56\x7d\x69\x1a\xfa\x22\x7a\x2c\x70\x69\x18\x74\x1b\xe7\x9c\xc7\x0a\x62\xa1\x17\x96\x9e\x7e\x8d\x49\x50\x5b\x63\x73\xbe\xfe\x60\xee\x1e\xda\x87\x4f\xed\xfe\xce\xfc\x09\x00\x00\xff\xff\xfd\xe5\x1e\x8b\x76\x04\x00\x00")

func templatesNpmHelmChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmHelmChartYaml,
		"templates/npm/.helm/Chart.yaml",
	)
}

func templatesNpmHelmChartYaml() (*asset, error) {
	bytes, err := templatesNpmHelmChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/.helm/Chart.yaml", size: 1142, mode: os.FileMode(438), modTime: time.Unix(1647935556, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmHelmTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x4b\xc3\x40\x10\x85\xef\xfd\x15\x8f\xd0\x83\x1e\xb2\xd5\x6b\xa1\x27\x15\x11\xa4\x2d\x41\xbd\x88\xc8\x74\x33\x36\xab\xc9\xee\x92\x99\x88\x25\xec\x7f\x97\x2c\xc1\x43\x8f\xde\x66\xde\xc0\x37\x1f\xef\xda\xe0\x9e\x15\xda\x30\x28\xc6\xd6\x59\x52\x17\x3c\x9e\xab\x47\x1c\x4e\xe8\x07\xef\x9d\x3f\x4e\x67\x61\xd8\xd0\x75\xe4\x6b\x59\x2f\xc6\xb1\x84\xfb\x80\x0d\x5e\xc9\x79\x41\xb1\x0d\x35\xef\x43\xaf\x05\xcc\x0b\xb5\x03\x8b\x11\xee\xbf\x9d\x65\xa3\xa7\xc8\x48\x69\x01\xf0\x4f\x0c\xbd\x62\xbb\xbb\xbd\x7b\xdf\xef\xaa\xa7\xcd\xf2\xe2\x6b\x38\xb0\xd5\x16\x47\x56\x94\xa5\xa7\x8e\x25\x92\x65\x8c\x23\x4c\xc5\x2d\x93\xb0\xd9\xfe\xa5\x29\xa1\x0c\xf8\x94\xe0\x23\x69\xb3\x29\x46\x23\x91\xad\x99\xa8\xf2\x7a\xf5\x66\xfc\x2c\x91\x0a\xcc\xdf\x25\x93\x6e\x1a\xea\x35\x73\x90\xd2\xe5\x99\xc9\xc3\xfe\xcc\x63\xa2\xc8\xbf\x6c\x9c\x72\x97\x45\x44\x49\x07\x31\x54\xd7\x3d\x8b\x70\xce\xe6\x25\x15\x59\xc0\x36\x01\x8d\x6a\x5c\xaf\x56\xcb\x71\xf6\x48\xeb\x79\x9c\xca\x49\xb9\x63\xf6\xf5\xd4\xdd\x6f\x00\x00\x00\xff\xff\xa0\x01\x8b\xe1\xa5\x01\x00\x00")

func templatesNpmHelmTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmHelmTemplatesNotesTxt,
		"templates/npm/.helm/templates/NOTES.txt",
	)
}

func templatesNpmHelmTemplatesNotesTxt() (*asset, error) {
	bytes, err := templatesNpmHelmTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/.helm/templates/NOTES.txt", size: 421, mode: os.FileMode(438), modTime: time.Unix(1647512303, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmHelmTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x0a\xbf\xc0\x0a\xbb\xa1\x5e\xc7\x11\xa1\x4a\xa0\x49\x9c\x90\x49\x2d\x1a\xe1\x38\x51\xe2\x15\x4d\x65\xef\x8e\xb2\x75\x5b\xc3\xb4\xe1\x5b\x6d\xff\xdf\xef\xfc\xc5\x60\xd7\x14\x93\xf5\xd2\x00\x86\x90\xee\x86\x65\xf5\x65\xa5\x6b\xe0\x91\x02\xfb\xad\x23\xd1\xca\x91\x62\x87\x8a\x4d\x05\x20\xe8\xa8\x81\x71\x84\x7a\xd5\x63\xd4\xfa\x19\x1d\xc1\x6e\x37\x4d\x52\x40\x33\x8d\xd7\xc8\x1b\x4a\xf5\xa9\x7b\x58\x62\xfc\x20\x4e\x19\x04\xd9\xef\xfd\x1a\x2e\x05\x32\x79\x2b\x52\x60\x6b\x30\x15\xcc\xa9\xb9\xf2\x1b\xd1\x03\x36\x11\x93\x51\x1f\x0f\x60\x87\x6a\xfa\xa7\x99\xd3\x6d\x2f\x00\x25\x17\x18\x95\x26\xf9\xec\xb9\xb9\xb8\x20\xfd\xc7\x02\x38\xde\x9e\x6b\x1c\x17\xf0\x6d\xb5\x3f\xdd\x6e\x1d\x7e\x52\xbb\x61\x7e\x21\x13\x49\xd3\x51\x04\xf0\x77\x72\x36\xcc\x10\xf5\x6f\xe8\x18\x6a\xf8\x01\xb1\xd2\x91\x28\x3c\x9c\xb5\x79\x83\xa4\x3b\x37\x8c\x17\x45\x2b\x14\x67\x98\xc5\x8d\x9f\x77\xac\xfd\x11\x45\xd8\xfb\xce\x95\xc5\x7c\x6d\xeb\xd9\x9a\xed\xa5\xa4\x0e\xa7\x61\xa9\xbc\x88\x84\x64\x28\x37\x48\x86\x66\xf6\x79\x35\x80\xe5\xfd\x25\xb9\x48\x21\x57\xf0\x71\x9e\xe5\x3c\x88\x5e\x35\x14\x83\x59\x6e\xad\x8f\x5a\x3c\x2a\x51\x1c\xac\xa1\x3a\xf3\x4a\x87\xbd\x4b\xf4\xea\x8d\xe7\x06\x5e\x57\x6d\x55\x55\xbf\x01\x00\x00\xff\xff\xaa\xeb\x94\xd7\x58\x03\x00\x00")

func templatesNpmHelmTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmHelmTemplatesDeploymentYaml,
		"templates/npm/.helm/templates/deployment.yaml",
	)
}

func templatesNpmHelmTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := templatesNpmHelmTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/.helm/templates/deployment.yaml", size: 856, mode: os.FileMode(438), modTime: time.Unix(1650439051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmHelmTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x8a\xc3\x30\x0c\x45\xf7\x39\x85\x2e\x30\x86\xd9\x7a\x9b\xfd\x10\x98\x92\x6d\x51\x1d\xd1\x98\x3a\xb6\xb0\xd5\x40\x09\xb9\x7b\x71\xec\x96\x16\x1a\xea\x9d\xff\x7f\x3c\x49\xc8\xb6\xa7\x98\x6c\xf0\x1a\xe6\xdf\xe6\x62\xfd\xa0\xe1\x9f\xe2\x6c\x0d\x35\x13\x09\x0e\x28\xa8\x1b\x00\x8f\x13\x69\x58\x16\x50\xed\x88\x51\xd4\x1f\x4e\x04\xeb\x5a\x9b\xc4\x68\x6a\xdd\xa3\xbb\x52\x52\xcf\xb4\x40\x0e\x4f\xe4\x52\x16\x01\x20\xf3\x71\x4f\x97\x98\x4c\xa6\xe4\xc6\xef\xbe\x54\x76\x52\xb9\x28\x4a\x0e\x51\xaa\xf1\x67\xfb\x7c\xe4\x73\x51\xf8\xfc\x04\xe3\x99\xa4\xdb\xe0\x51\x84\x6b\xcc\x31\x48\x30\xc1\x69\x38\xb4\x5d\xcd\xca\x86\x2f\x90\x0f\x03\x75\x7b\x63\x1e\x65\x19\x95\xc8\x91\x91\x10\xbf\xdf\x7b\x0f\x00\x00\xff\xff\xe0\x24\x6f\x5a\x80\x01\x00\x00")

func templatesNpmHelmTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmHelmTemplatesServiceYaml,
		"templates/npm/.helm/templates/service.yaml",
	)
}

func templatesNpmHelmTemplatesServiceYaml() (*asset, error) {
	bytes, err := templatesNpmHelmTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/.helm/templates/service.yaml", size: 384, mode: os.FileMode(438), modTime: time.Unix(1648001029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmHelmValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\x4f\x6b\xdb\x4e\x10\xbd\xcf\xa7\x78\xc4\x87\x9c\xe4\x9f\x42\x2e\xc9\xde\x84\xe3\x5f\x1b\x70\x6a\x63\x29\x29\x69\x29\x62\xbc\x1a\x59\x0b\x2b\xad\xd8\x5d\xc9\xe8\xdb\x17\xc5\x0e\xb8\xf4\xd0\xeb\xcc\xfb\x37\xf3\x16\x78\x92\x9a\x07\x1b\x31\xb2\x1d\x24\xa0\x76\x1e\xda\xe8\x2a\xa9\x64\x4c\x5a\x89\xde\xe8\x24\x88\x1f\x8d\x96\x25\x2d\x50\x34\x26\xc0\x04\x30\xde\xb3\x97\x4d\x52\x3b\xdf\x72\x8c\x52\xa1\x36\xf6\x03\xf0\x24\xda\xb2\x17\x8c\xec\x0d\x1f\xac\x04\x44\x87\x83\xa0\xe7\x10\xa4\x82\xe9\xa2\xc3\xe4\x06\x8f\x28\x6d\x6f\x39\x4a\x58\x12\x79\xe9\xad\xd1\xbc\x72\x43\x17\x15\xee\xc8\xb4\x7c\x14\x45\x40\xc7\xad\x28\x54\x43\x7b\x20\xa0\x1f\xac\xdd\x39\x6b\xf4\xa4\x90\xd9\x13\x4f\x81\x80\x05\xb6\xa3\x78\x6f\xaa\xd9\xa9\x11\x7c\x50\x11\xf9\x88\x53\xe3\x82\xa0\xba\x9c\x67\xce\x6b\xdd\xb0\x8f\xe0\xbe\x7f\x13\x1f\x8c\xeb\x96\x04\x3a\xdb\xed\x06\x6b\x73\xd1\x5e\x62\x50\xf8\xf9\x8b\x66\xeb\x4f\x69\x85\x9b\x1b\xaa\x07\x6b\xff\x1a\x92\x74\xe3\x1c\x34\xb9\x44\xdd\xe7\x2f\xcf\x79\xf9\x25\x2b\xd6\xdf\xb3\xf7\x32\x5f\xef\xdf\x9e\x57\xeb\xf2\xeb\x36\x2f\x08\xc0\xf9\xc9\x0a\x3e\xb4\x26\x24\x47\x8e\x72\xe2\xe9\xf3\xbd\xff\x54\xd9\x6d\xf7\x7f\xa8\xdc\x3e\xa6\xe9\xfd\xed\x15\xad\xf8\x71\xbd\xce\x82\xe1\xff\xf2\x86\xbb\x63\xc3\xe6\x0a\xb5\x59\x95\xd9\x66\x73\x8d\x94\xae\x7c\xcd\x97\xaf\xc5\xff\xc9\x03\x11\xd1\x25\xcf\x7c\x56\x9c\x7a\x51\xf8\xe6\x2a\xd9\x39\x1f\xe7\x0e\x9c\x8f\x0a\x0f\xe9\xdc\xcd\x65\xaa\x70\x7f\x97\x3e\xa6\x33\x93\x7e\x07\x00\x00\xff\xff\xf8\xed\xe5\xad\x4f\x02\x00\x00")

func templatesNpmHelmValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmHelmValuesYaml,
		"templates/npm/.helm/values.yaml",
	)
}

func templatesNpmHelmValuesYaml() (*asset, error) {
	bytes, err := templatesNpmHelmValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/.helm/values.yaml", size: 591, mode: os.FileMode(438), modTime: time.Unix(1649209084, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x28\x4a\x4d\xcf\x2c\x2e\x29\xaa\xd4\x4b\x4f\xcd\x2f\x4f\xac\xd4\x4b\xce\xcf\xd5\xcf\x4b\xcf\xcc\xab\xd0\x4f\xce\x4c\x4e\xd1\x05\x33\xad\x0c\xf5\x8c\x0c\xf5\x0c\x74\x2b\x2c\xcc\x78\xb9\x1c\x5d\x5c\x14\x52\x32\x8b\x4b\xf4\x15\xf4\x4b\x8b\x8b\xf4\x8b\x33\x12\x8b\x52\xa1\x3a\x32\x4a\x72\x73\xf4\x21\x2a\xc0\x02\x7a\xc9\xf9\x79\x69\x7a\x25\xa9\xb9\x05\x39\x89\x25\xa9\x0a\xfa\xa9\x25\xc9\x50\x95\x30\xb1\x62\xfd\x94\xd4\xb4\xc4\xd2\x9c\x12\x54\xa5\x80\x00\x00\x00\xff\xff\xad\x85\x28\xa1\x9a\x00\x00\x00")

func templatesNpmDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmDockerfile,
		"templates/npm/Dockerfile",
	)
}

func templatesNpmDockerfile() (*asset, error) {
	bytes, err := templatesNpmDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/Dockerfile", size: 154, mode: os.FileMode(438), modTime: time.Unix(1647932880, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmJenkinsfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\x6f\x8f\xdb\xc6\xd1\x7f\xef\x4f\x31\xe1\x73\x88\x74\x8f\x8e\xe4\x39\x09\x92\xe7\x91\x41\x17\xe7\x8b\x7c\x56\xe3\xbb\x73\x75\xe7\x14\x81\x73\x38\xac\xc8\x91\xb4\x3e\x72\x49\xef\x2e\x65\x2b\x8e\x80\xf4\x4f\x10\x04\x69\xe3\xa6\x01\x92\x02\x45\x03\xb8\x2d\x90\xbe\x28\x52\xe4\x4d\x0a\x38\x29\xfa\x65\x22\xc7\xfe\x16\xc5\xee\x92\x92\xee\x74\x92\x48\xc5\x49\xd7\xc0\x59\x24\x77\x66\xe7\xcf\x6f\x67\x86\xb3\x4c\x68\x82\x21\x65\x08\xf7\x2f\x00\x00\xe9\x22\x93\xe6\x27\x00\x8b\x03\xcc\x7f\x03\x84\xa4\x8d\x21\x54\x6e\x23\x3b\xa1\x4c\xd8\x7a\x66\xc5\x3c\x1c\x5e\xd0\x7f\xf4\x85\xe4\xb4\xdb\x45\x2e\x26\x84\xe0\xf3\x98\x41\x65\x13\x5e\x82\xff\x55\xff\x2a\x66\xe2\xf0\x82\xf9\x5f\x48\xd2\xc5\xe9\xe9\xfa\x46\xb5\x72\x25\xa5\x61\x50\x59\x9f\x7a\x60\x1e\x62\x22\xce\xdc\x03\xd7\x85\x2e\x95\xe0\x73\x0c\x90\x49\x4a\x42\xd1\x0c\xea\x50\xe9\x52\xe9\x87\x31\x43\x5e\xd9\x80\x94\x87\x75\xa8\xf4\xa4\x4c\xea\xae\xdb\xa5\x32\x24\x6d\xa7\x8b\xf1\x5d\x32\x70\xfc\x38\x72\x7d\xea\x07\x76\x80\x7d\x37\xc0\x28\xb6\xf5\x55\x3f\xc5\xdb\xc2\xe9\xd2\x5c\xc9\xb1\x36\x31\x93\x84\x32\xe4\xd5\xca\xed\xe0\x64\x46\x40\x2d\xa4\xcf\x69\x22\x67\xef\x03\x40\x80\x1d\x25\x6b\x93\x75\x62\x8f\xe1\x5d\x88\x79\xd7\x51\xcb\x39\x3b\xe6\x66\x75\xfd\x3c\xaa\x8c\xc2\x49\x08\x17\xb8\x43\xe5\xe2\x59\x7e\x1c\x45\x31\x6b\xb0\xfe\x39\xd3\x86\x17\xce\x5c\x5e\x98\x73\x39\x9c\x21\x75\x5d\x90\x29\x67\xa0\xc5\x1d\x90\x28\x04\xca\x64\x0c\x63\x00\x19\x47\x9e\x75\xa3\xc0\x88\x30\x49\x7d\x5b\x72\xc2\x44\x27\xe6\x11\xf2\x62\x5e\x2d\x66\x6b\x58\x6c\x6f\x3d\x94\xd1\x7d\x7a\xda\xde\x6f\x90\x28\xdc\x6e\x9e\x6f\xc8\x69\xf9\x29\x93\xc8\x13\x8e\xb2\xb2\x3e\x7f\x01\x2d\x2b\x75\x94\x1a\xc7\x61\xdc\xad\x5a\x07\x12\x13\xb8\xe8\xc0\x93\xcf\xff\xf2\xf8\xb3\xdf\x8d\x2d\xf6\xf8\x93\xf7\xbe\xfd\xfa\x2b\x6b\xfe\xa2\x5a\x5a\x22\x89\x00\x0f\x38\x92\x40\x49\x09\x1d\x1a\x62\x1d\x2a\x63\x2e\x95\x0b\x0b\xe9\x5d\x17\x34\x4e\x20\x22\x34\xa4\xac\x0b\x21\x15\x72\x21\x05\xed\x54\xf5\xa2\x4e\x44\x68\x66\x70\x01\xcf\x79\xc0\xd2\x30\x5c\xa2\xb5\x1e\xbb\x5b\xcd\xeb\xcd\xbd\x9d\xe3\xeb\xcd\x83\x43\xf0\x94\x25\xfc\x98\xf9\x44\xee\x1a\x01\xae\x53\x21\x67\x17\x58\x6c\x04\x3d\xd0\xef\xc5\x60\xdd\x6a\xee\x5d\xdd\x3f\x7a\xfa\xcb\x2f\xbe\xfd\xfa\xab\xd1\x83\x8f\x9e\xbe\xf3\x8b\x6f\x1f\x3d\xaa\x5b\xcb\xc9\x13\x4e\x99\x0c\xd9\x29\xf1\x16\x52\xcd\x62\x7e\x7a\x8c\xad\xc4\x48\x84\x22\x21\x3e\x82\x57\xd8\x46\xb9\x2c\xd6\xad\x46\xab\xb5\xdf\x3a\x9a\xf0\xe0\x78\x27\xa5\x1c\x83\xe5\x0a\x89\x1e\x54\xf0\x1e\x95\x70\xb1\xb2\xa2\x1a\x79\xcc\x3d\x97\xbb\xc1\x7b\x14\x07\x69\x88\x76\x5b\x45\x5f\x3b\xe6\x01\x72\x5b\xc4\x7c\x29\xfa\x27\xa0\xd3\xf4\x40\x59\x27\x8e\x88\xa4\x31\x2b\xb9\x69\x5e\x70\xe0\xf1\xdf\x1e\x8e\xfe\xf4\xe9\x93\x7f\xff\xf1\xc9\xc3\xdf\x3c\xfe\xe0\xe3\xc7\xef\x7f\xf4\xf8\xc3\xdf\x8f\x1e\x3d\xb0\xd6\x17\x03\x5f\xa4\x6d\x61\xe0\x27\xe3\x24\x0e\xe3\x2e\x7d\x0b\x8d\xcb\x96\x10\xaa\xc8\xd6\x43\x98\x50\x81\x56\x1c\x38\x8a\x34\x94\xb9\xef\x16\xb2\xc8\xa0\x6a\x44\x7f\xfc\xd9\xaf\x47\x5f\x3f\x7a\xfa\xf0\xd1\xe8\xd1\x83\xa3\x25\x48\x55\xb1\x89\x82\x07\x17\x97\xce\x12\x78\x07\x3c\x6b\x31\xb7\x4e\xcc\xab\x22\x6d\x03\x65\xda\x1a\x05\x80\x29\xf0\x8e\xa7\xfe\xd4\xac\x35\xea\xc0\xad\xb5\xfb\x22\x6d\x6b\x84\x0f\x8f\xe0\x4d\xb6\x1c\x94\xb4\x56\xfb\x1e\x7b\x2a\xdf\x16\x02\xef\xcc\x77\x51\x01\xd4\x9a\x94\x67\x23\xeb\x17\x00\xaa\x4f\x42\x3f\x0d\x89\x44\x40\xd6\xa7\x3c\x66\x91\x2a\x7a\x22\x92\x94\x84\xea\x8b\x0e\x8c\xde\xfd\xfb\xe8\xdd\x2f\x47\x0f\xfe\xf0\xf4\xbd\x07\x4f\x3e\xfc\xe7\xe8\xc1\x27\x4b\x82\xfb\x38\x37\x7b\x70\xab\x7e\xb4\x18\xce\x6a\xbb\xb3\x3e\x5c\x56\x62\x3a\xf2\xde\xd9\x42\xe4\xcc\x50\xe9\xe2\x2a\x0d\xb1\x5a\xc9\xa7\xaf\x3b\x22\x09\xa9\xac\x5a\x6f\xf2\x9f\xbc\xc9\xac\x75\x07\x89\xdf\x9b\x93\x42\xa7\x86\xc6\x9a\x07\x74\x71\xce\xc8\xa1\xcb\x02\xbc\xe7\x81\x70\xf4\x8f\xfd\x4e\xd5\xf2\x96\x58\xc0\x44\x52\x43\xe7\xd9\x17\x8b\xe4\x97\x53\xf1\xf3\xe7\x5b\xad\xbd\xe6\xde\xce\x11\x44\x69\x28\xa9\xad\x4b\x0f\x65\xa6\x3e\xe1\x94\xb4\x43\x04\xc2\x11\x58\x2c\x81\x84\x61\x7c\x17\x83\x0d\x68\x93\x00\xd4\xb4\xba\x55\x5b\xae\xd4\x10\x43\x81\xc5\x64\x52\xfa\x9f\xe0\xc0\x13\x8e\xda\x6b\x92\x53\xd6\xad\x6e\x6e\x68\xcd\x0a\x24\xb7\x8c\x41\x9f\x84\x29\x9e\x62\xa1\x19\xd4\x2e\x16\x63\x31\xc6\x93\x93\xa4\xb2\x7a\x82\x83\x0d\xcd\xb0\x18\xf1\xc4\xa8\x3a\xc5\x5a\xb5\x13\x1c\xd4\x2c\xcf\xaa\x69\x1e\x4b\x2d\xb5\x60\x5b\x16\x79\xae\x60\xba\xb7\xb5\xdb\x38\xb8\xb1\xb5\xdd\x00\x0f\xce\x24\xd7\x45\xe1\x60\xde\xa3\x2c\x1a\xb4\x89\xf4\x7b\x59\x0a\x33\xf9\x48\x94\xaf\xde\x5e\xaa\xc3\x74\x34\x5f\x82\x6a\x15\x78\xa3\xa9\xb0\xbb\xd4\xfe\xd3\xb5\x0d\x8c\xbe\x79\x67\xf4\xf9\x07\x66\x21\xb3\x68\x1d\xd6\xee\x47\x26\x0e\x83\xb5\x9c\x9b\x51\xdc\x1a\xd3\x58\x45\x44\x00\x13\x0e\xa7\x83\x60\xc2\x31\x21\x1c\xd5\xef\x92\x08\xb2\x6a\x66\xe9\x1a\x58\x47\x70\x70\xf3\x0a\x1c\x1c\x36\x6e\xd4\xcf\x63\x5e\xa0\x72\x33\x31\x22\x72\x12\x22\x7b\x9e\x57\xb4\x0c\xcd\x86\xe8\x8d\xab\xac\xac\x1a\xd1\x7c\xe0\xbb\x6f\x1e\x8d\xfe\xfa\xe5\x25\x53\x41\x5d\x2a\x26\xc5\xe2\xec\x95\x8f\xcc\x97\x6b\xc6\x02\x47\xf0\xe4\x8b\x87\xdf\x7d\xf1\xe9\xe8\x5f\x1f\x8f\xde\xff\xad\x71\xe7\x77\x1f\xfe\x63\xf4\xe7\x5f\x99\x3c\xe1\x38\x4e\xb1\xc5\x55\x78\x68\xec\xbd\x0e\x1e\x44\x0e\xb2\x7e\x51\x7f\xaa\xf4\x56\x68\xae\xe6\x6a\x0a\xa6\x08\x79\x17\xab\xe3\x60\xb2\xd1\xd8\x7b\x7d\x7d\xc9\xf6\x3d\xbb\xa4\xc9\xa8\x41\xec\x9f\x20\x07\x49\xba\xc5\x2c\xc7\xfa\xce\xf6\xcd\x56\xab\xb1\x77\x78\xfc\xea\xfe\xf6\x6b\x8d\xd6\x71\x73\x77\x6b\xa7\x71\x7c\xb8\xb5\xb3\xac\xd6\xc9\x07\xed\x54\x15\x9b\x9d\xe6\xe1\xf1\x95\xd6\xd6\xde\xf6\x35\xcf\xb3\x22\x22\x24\x72\xab\x04\x6a\x96\x08\x03\x9e\x79\xdc\xdc\x7e\x35\x7f\xd6\x6a\xec\x34\x0f\x0e\x5b\x6f\xd4\xc0\x72\xad\xda\xd9\xf0\x55\xd3\x37\xb3\x3d\x61\xd5\xad\x1a\xe4\x42\x6e\xef\xef\xee\x36\x0f\x15\xd3\x67\x09\xc1\xc2\x59\xeb\xc7\x55\xd6\x78\x04\x6a\x96\x6d\xd5\x7e\x50\x03\x9c\x13\x89\xac\xa3\x2c\xbc\x4e\x40\x09\xa2\x17\xa7\x61\x00\x6d\xac\x43\x26\xe5\x3c\x23\x14\x42\xff\x29\xec\x13\x2e\x69\x87\xf8\x52\xbf\xb0\x2b\x09\x8a\x70\x98\x16\x61\xab\x75\xd8\xbc\xba\xb5\x7d\x78\x7c\xb5\x79\xbd\xa1\x52\xe3\x6c\x56\xd4\x86\x34\xfa\x19\xa3\x3e\x43\x4b\xcf\xb5\xc6\xfe\x95\x9f\x36\xb6\x0f\x8f\x6f\x6c\x1d\x5e\xf3\xcc\xb4\xdd\xe6\x5e\x73\x7f\x02\x0a\xcb\xe5\x18\x22\x11\xe8\x9a\xb5\xc7\x69\xbd\x66\xb9\x34\x22\x5d\x14\xee\x79\x92\xba\xe7\x49\x6a\x10\xb6\xd0\x2c\x35\xcb\x91\x84\x17\x8a\x0e\xe7\xf2\x99\xd6\xa7\xa4\x36\xb9\x8f\xa7\x44\x5f\xac\x4e\x51\x18\xf5\x30\x8c\xa6\xb3\xa5\x28\xac\xdd\xb5\xad\xd6\xe1\xb1\x92\xd1\x33\xb8\x28\x4a\xb8\x75\xe3\xc6\x2a\x64\xd7\x1a\xd7\x77\xc7\xb6\xf2\xac\xac\xa5\x7a\xf1\x95\x17\x9c\x8b\x2f\x3b\x2f\xbf\xec\xbc\xf8\x4a\xfd\xff\x37\xff\x6f\xb3\x40\xd1\x72\x3a\x76\x4f\x4c\xe6\x79\x96\xda\x4f\x42\x96\x88\xdf\x13\x4b\xbc\xde\x68\x1d\x34\xf7\xf7\x3c\x6b\xd3\xd9\x74\x36\x0b\x81\xa4\x44\xcd\x7f\xee\x52\xb3\x2a\x38\x1c\x93\x90\xf8\x58\xb5\x5a\x8d\xeb\x8d\xad\x83\x86\xb5\x61\x6d\x2e\x7f\x31\x82\xc5\xe5\xed\xd4\x50\x45\x4e\x55\xd9\x08\xec\x40\x97\x8a\xaa\xc4\x19\xba\x8e\x86\xd1\xf3\xcf\x43\xd5\x9f\xb9\x7d\x49\x60\x00\x36\x85\x8a\x70\xfb\xc8\x05\x8d\x59\x1d\xb4\x8d\x26\x97\x6b\xf7\x67\x94\x1b\xba\x15\xd8\xee\x11\x2e\x75\xeb\x71\x7d\x1d\xde\x7e\x1b\x24\x4f\x8b\x55\x71\xdf\x4f\x4a\x85\xca\x3a\x08\x12\x25\x21\x66\x17\x46\xc0\x1c\xb9\x3f\xba\x6c\xba\xd0\x1b\xc7\xe2\x5c\x9c\x71\x7c\x18\xc2\xe5\xcb\xe6\x85\x4e\x68\x89\x2e\x99\xca\x50\x47\xc0\xbd\x29\xf9\xe7\xa5\x9c\xe1\x69\xf2\x92\x0a\xa9\x28\xc2\x53\xa6\xca\x46\x92\x86\x12\xfc\x38\x40\x9b\x30\x12\x0e\x04\x15\xe6\x0d\xe1\xd9\xd4\xf4\x42\x12\x49\x7d\xcd\x1f\x72\xfe\xc5\xb6\xbb\xae\xea\x6f\x59\xe6\xcd\x4c\xc6\x71\x68\x1d\x95\xe9\x33\x67\x43\x79\x6e\xda\x39\x97\x92\xbb\x05\xba\xa7\xf9\x70\x5d\x88\x48\x1f\x19\x24\x3c\xbe\x8d\x7e\xb1\xf7\x9c\x39\xb2\x7b\x1e\x58\x9a\x59\xc9\x4a\x73\xd2\x6d\x55\xc4\xb6\x31\xa8\x7d\xca\x61\x73\x0f\x3b\x96\x8d\xbb\x54\xf6\x0e\x62\x46\xf8\xcf\xd2\x36\x36\x58\xbf\x0a\x94\x09\x49\xc2\x50\x77\x63\x0d\x0c\x2b\x42\x4d\xb8\x93\xb6\xd1\x16\xc8\xfb\xe6\x44\x46\x59\xe6\x8d\x38\x05\x9f\x30\x88\xfb\xc8\x39\x0d\x50\xf7\x45\x27\xe7\x6a\x20\x63\x68\x23\xa4\x02\x83\x95\x64\x33\xaa\x9f\x75\x5f\xd4\x67\xe0\x87\x48\x18\xf4\x91\xd3\xce\x00\xb4\x74\x75\xfd\xb7\xb8\x5f\xa7\x47\xb1\x92\x71\x85\xe9\xc5\x67\xba\x2e\xc4\xb2\x87\xfc\x2e\x15\x08\x24\x95\xb1\x1d\xa0\x44\x5f\x42\x48\x58\x37\x25\x5d\x04\x39\x48\x8a\x6d\x48\x58\xa5\xbe\x1f\x43\x6c\x6a\x6d\x3b\x5f\xfb\xd9\x22\x2e\x6b\x19\xfa\x84\x31\xe4\xd7\xe2\x08\xc1\x03\xb5\x41\x4e\xc1\xcc\x3c\xad\x5c\x5a\x15\x37\x33\xb0\x2e\x81\xea\x66\x07\x06\x71\x0a\x3d\xd2\x47\xf0\x63\xd6\xa1\xdd\x94\x63\x00\x51\xcc\x15\xc0\x15\xdc\x19\x42\x37\x8c\xdb\x24\x04\x43\xa9\xa6\x31\xf4\x15\xef\x0d\x4d\xab\x36\x85\x48\xd0\x57\xf0\xa4\x52\xe8\x24\x50\xf0\xfd\x78\xce\x98\xd9\x06\x3a\x57\x68\x15\x9c\x2c\x34\xbd\x86\x03\x6f\xd2\x06\xba\x6c\x1e\xda\xd9\x43\x35\x29\x41\x2e\x29\x8a\xd5\x36\xc9\x5c\x41\xdc\x3e\xe1\x6e\x48\xdb\xee\xd8\x9e\x6e\x9b\x32\x73\x95\x3b\x72\xd5\x25\xff\xcb\x3b\xf3\x87\x78\x99\xce\xbb\x3f\xb9\xa3\xf2\xb7\x4e\x15\x3a\x2b\x93\x74\x51\x81\xcc\x61\x03\xdd\x9d\xee\xc4\x29\x0b\x36\xc4\x09\x4d\xf2\x44\x3a\xc8\x12\x69\x31\x3d\x0a\xb7\xf7\x54\x49\xa0\xaa\x09\x3b\xc0\x0e\x65\x18\x9c\x3d\xa7\x5f\x34\x96\x96\x02\xd9\x69\x9f\x48\xdb\x86\x2d\xe0\x3d\xf4\x53\xb5\x6d\x4a\x14\x04\x4e\xf6\x09\x48\xd9\x4a\xc0\x75\xf5\x72\x80\x7d\xe4\x83\x6c\x7d\xca\x32\x99\x0a\xf2\xd0\x07\x66\x9a\x2a\x93\xa2\x64\xcb\xe8\x7c\xdf\x6b\x56\xaa\xda\x13\x59\x3b\xb6\x0c\xcf\x71\x2f\x57\x4c\x7a\xb9\x25\xc8\x73\xad\xfc\x28\xd0\xfd\x68\x47\xf4\x50\x1b\x75\x85\x1d\xeb\xba\x60\x0e\x25\x74\x5b\x5b\x52\xa9\x5d\xab\xd8\xfa\xd1\x4a\x15\x80\x12\x4a\x37\x1c\xc7\xfc\x50\x09\xba\xa1\x5b\x91\xc5\x0e\x2d\x66\x24\xd4\x18\xd0\x4a\xae\x22\xd1\x4c\xf4\x5b\xbb\xef\x47\x41\x39\x8f\x41\xd9\xc0\x56\x74\xf2\xb3\x0c\x6a\x33\x47\x04\x35\xcb\xe6\x28\xe2\x94\xfb\x68\xfb\x71\x32\x28\x85\x33\xd7\x05\x45\x03\x39\x87\x62\xf1\x04\xf2\x1d\x3f\x26\x7b\xae\x6c\x77\x1f\x32\x78\x73\xf3\x95\x01\x4c\xf1\x2a\xbf\x4f\x94\x30\x8a\x91\x63\x38\x18\x61\xd4\xcb\x9f\xbe\xa9\xcc\x74\xe6\x56\x40\x85\x1c\x8b\xbc\x52\x0a\x9c\xad\x7e\x4f\x02\xca\xc1\x4e\xc6\xed\x43\xe1\xae\xdd\x1f\x2f\x36\x2c\x18\x47\x57\x58\x66\xb5\x14\x3e\x5b\x2d\xa8\xda\xc0\x4f\xc0\xe6\x1d\xc8\x04\x37\xd6\x1c\xce\xd5\xa8\xec\x9a\xe5\xfa\x33\xa7\xc6\x6c\x80\x36\x27\x43\x6d\x12\x28\x18\x45\x44\x2a\x10\x8d\x21\xb4\xba\x4d\xcc\xb1\xd2\x0a\xba\x95\xa2\x28\x37\x7b\xc6\x57\x10\xf5\x27\x4e\x39\xd3\x8c\x98\xe9\xb2\x0e\x2f\x81\x24\x1c\xfc\xb7\xfa\x9d\xa5\x53\x1d\x49\xb8\xd3\x7d\x6b\xe9\x3c\xb7\x9c\x81\xce\x51\xc0\x07\x3f\xf9\xbe\xe2\x4c\xf5\x7f\x95\x44\x25\x6a\xcc\x62\x73\x17\xcd\x5b\xec\xc1\x79\x94\xea\xfe\x9c\x07\x8b\xef\x9c\xbe\x4a\x62\x71\xce\x67\x92\x22\xf5\x7d\x14\xe7\x7d\x7f\x39\x1e\x66\x1b\xe5\x13\x75\x51\x0b\xb7\xe3\xf6\x02\x6f\xba\xee\x64\x5a\x1d\x2a\x5c\x44\x54\x1c\xeb\xbf\x76\x9b\x08\xea\xeb\x57\x34\xea\xa3\x6b\x8e\xea\x2a\x1b\xaa\x3a\x26\x5d\x22\xb1\xae\x5b\x5e\x1b\x70\x97\x50\x69\x7e\x2f\xd1\x51\x8d\x0e\xa1\x61\xca\x71\x81\x0e\xe6\x23\xd1\x25\xaf\xb8\xfa\x4b\xd1\x98\x49\x64\xd2\x8b\x08\x0d\xb7\xcd\xef\xea\xf2\x0f\xc8\x04\xb2\x00\x50\xd1\x80\x8c\x21\xc0\x3e\x86\xaa\xda\x5f\x9c\x17\x33\xb3\x9e\x22\x9d\xfe\x6a\xf3\xd6\xe4\x13\x65\xc7\x67\x47\xaa\xa2\x9c\xfe\x98\x71\x49\x28\xd5\x2c\xf1\x9e\x84\x76\x1c\x0c\xea\x60\xad\x65\x9a\x59\x1b\xaa\x9c\x53\xef\x90\x75\xa8\xac\xdd\x68\xed\xeb\xdd\xa0\xcf\x9b\x6c\xd0\x9f\x5d\xc3\xff\xc0\xda\x95\x9b\xcd\xeb\xaf\x1e\xef\xdd\xdc\xbd\xd2\x68\x81\x9d\x5f\x1f\x1c\x6e\x1d\xde\x3c\x78\xae\xb2\x01\x32\x56\x2c\x8b\xca\x53\x1c\xa7\xc3\xfc\xf3\xf0\xe1\x7f\x02\x00\x00\xff\xff\x18\xa0\x1d\xb7\x9b\x2e\x00\x00")

func templatesNpmJenkinsfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmJenkinsfile,
		"templates/npm/Jenkinsfile",
	)
}

func templatesNpmJenkinsfile() (*asset, error) {
	bytes, err := templatesNpmJenkinsfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/Jenkinsfile", size: 11931, mode: os.FileMode(438), modTime: time.Unix(1653471038, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmCicdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xcf\x6e\xd3\x4a\x14\xc6\xf7\x96\xfc\x0e\x47\xbe\x51\xb3\x1a\x7b\xef\xaa\x57\xd7\x37\xb8\x6d\xa0\xff\xe4\x1a\x24\xa4\x4a\xd6\x64\xe6\xd4\x19\x6a\x8f\x87\x99\x71\x20\x44\x59\x01\x0b\x24\x24\x16\x88\x1d\xe2\x41\xe0\x79\x8a\xc4\x5b\x20\xff\x89\x70\x4b\x9b\xee\x26\xdf\x9c\xef\x77\xce\x7c\x39\x96\xb4\xc4\x10\x38\x96\x15\x61\x82\x71\xb2\xa8\xf1\x85\x71\x9d\x46\x36\x8a\x32\x0c\xa1\x95\x39\x2e\x5c\xa7\xa4\x42\x5a\x2a\x24\x6a\x13\xba\x0e\x00\x81\x42\x5c\xa2\xcc\x5f\x0a\x2a\x5d\x47\x51\x3b\x0f\xc1\x77\x1d\x8d\xa6\xaa\x35\xc3\x4d\x51\xd7\x62\xcc\x85\xb1\xe3\x46\x01\xe8\xee\x6f\x6a\xcd\x31\x84\xf1\xd8\x75\x8c\xa5\x79\x6f\xfe\x07\x7e\x7e\xf8\x7c\xfd\xf1\xfd\x10\xa4\x28\xbb\xa2\x39\xf6\xa4\x39\x16\x45\xd8\x9d\x9b\x12\x4f\xaa\x12\x84\x34\x96\x16\x05\x90\x1c\x96\x54\x4b\x20\x44\x63\x2e\x8c\xd5\xcb\xbd\xb9\xb5\xca\x84\x41\xb0\x11\x7c\xa9\x4a\xdf\xd2\x6a\x46\x2b\xbf\xd2\xb9\x37\x20\xb5\x56\x56\xc9\x4b\x91\x83\x41\x0b\x1b\x0b\x3c\xc0\x00\xb2\x15\x63\xa8\x31\xd9\x4c\x48\xaa\x97\x99\x11\x16\x5b\x5c\x18\x04\x8c\xcb\x5b\xa0\xa0\x89\x24\x90\x15\x47\xd2\x98\xee\xe2\xee\xec\x74\x2f\xd4\xb5\x84\x59\x2d\x0a\xee\xf5\xa9\x7d\x7b\x77\xfd\xe3\x3b\xaf\xd8\x15\xea\x5f\x5f\xbe\x5e\xbf\xfd\x34\x4c\xb0\xd3\xef\x09\xb0\xbb\xec\x68\x40\x2c\x8c\x56\x93\xa7\x49\x12\x9f\xa4\xd9\xa3\xd3\xc9\x93\x38\xc9\xa6\xc7\xd1\x41\x9c\xa5\xd1\xc1\x1a\x7c\xef\x6f\xa3\xaa\xcd\x7c\x9b\xe9\x0e\x8b\xa1\x0b\xdc\xda\xe7\xdf\xc1\x6d\x94\xa4\xd3\xfd\x68\x92\x66\xfb\xd3\xa3\xf8\x24\x3a\x8e\xd7\xbe\xa5\x7a\x48\x2d\x19\x30\xf5\xa0\xe3\xbe\x86\xa7\xff\x3f\x8e\x27\x69\x76\x16\xa5\x87\xeb\x3e\xcd\x39\x16\x25\xb0\x39\xd5\x16\x76\x80\xa3\x2a\xaa\x65\x89\xd2\x0e\x23\x6d\x4a\xee\x09\xf4\xaa\x9e\x21\xb3\xc5\x66\x07\x6a\x83\x84\x55\xd2\xe2\x6b\x0b\x1c\x17\xc3\xc1\x19\x07\xbf\x01\xed\x76\x1d\xfb\x45\xbf\x99\xf2\x9f\x1a\x56\xeb\x02\x08\xe1\xd4\x52\xd2\xed\x13\x5c\x78\xff\x8d\x56\x93\xc3\x28\x49\xb3\xf6\x9d\x64\xf3\xeb\x59\x9c\x9c\x4f\x4f\x4f\xd6\xbe\xcd\xdf\x5c\x78\x30\x5a\x1d\xc6\x47\xc7\x59\x12\x1f\x4c\xcf\xd3\xe4\xf9\x3a\xa0\x4a\x04\xed\x03\xcd\xb0\x57\x3b\x85\x46\x55\x41\xad\x38\xb5\x08\x39\x56\xaf\xe8\x72\xb7\xd5\x6b\x95\x6b\xca\x11\x08\x69\xb6\x5a\x94\x34\x47\xbf\xc9\x62\x6f\xdb\x1f\x39\x5a\x45\x67\x67\xdd\x6c\x3d\x2c\xb8\x31\x30\x10\xb2\x40\x6d\x44\x25\xe1\xf6\xe8\x40\x48\xff\x5d\x7b\xae\xe3\x3a\xbf\x03\x00\x00\xff\xff\x50\xc4\x3c\x00\xb8\x04\x00\x00")

func templatesNpmCicdYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmCicdYaml,
		"templates/npm/cicd.yaml",
	)
}

func templatesNpmCicdYaml() (*asset, error) {
	bytes, err := templatesNpmCicdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/cicd.yaml", size: 1208, mode: os.FileMode(438), modTime: time.Unix(1647935110, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNpmNginxConfTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcb\x6a\xdb\x40\x14\x86\xf7\x02\xbd\xc3\x21\xd6\xaa\xe0\x8c\x68\x2d\x28\x11\x85\x86\xe0\x36\x5e\x94\x04\xcb\xbd\x6d\x3a\x0c\x9e\x53\x4b\x54\xd6\x0c\x33\xe3\x44\x25\x68\xd7\x2b\x21\xd0\x4d\x16\x2d\xbd\x40\xbb\x29\x14\xdc\xee\x4a\x29\x21\x2f\x63\x57\xe9\x5b\x14\x49\x8e\x2d\x70\x6d\x2d\xc4\x19\xfe\x7f\xbe\xff\xcc\x9c\x69\xc0\x90\x45\x49\x93\x49\xf9\xf7\xf9\x49\x7e\x36\xb6\x2d\x8d\xea\x00\x15\x1c\xd9\x96\x6d\x01\x00\xc4\x91\x36\x98\xc0\x75\xd7\xaf\xd6\x95\x4e\x13\x36\xc4\xf9\xde\x52\x9a\xd9\x45\x9f\x99\x48\x24\x40\x38\x1e\x04\xa5\x97\x14\x30\x28\x3f\xa9\x44\xfa\x94\x4a\xa6\x35\x84\xc6\xc8\x2d\x42\x9c\xa3\x6e\x70\xa7\x13\xd0\xdb\xdb\xbd\xf6\xfd\xed\x87\x34\x68\x77\xef\x75\x76\xda\x74\x77\x2f\xe8\x65\x5b\xab\xd4\xfd\xbd\x6e\x2f\x23\xb5\xd8\x4b\xb4\x46\x43\x43\x64\x1c\x15\xdc\x95\x03\xc5\x38\x82\x53\x24\xd1\x51\xb5\xf2\x57\xda\x77\x44\x92\x60\xbf\x6c\x7d\x63\xb6\x75\x63\x7d\xc0\xae\xd0\x66\x46\x0f\x85\x36\xab\xd1\x0f\x9a\x5d\x64\x71\xb3\xb3\x0f\x8e\xc2\xa1\x30\x48\x19\xe7\xca\x87\xc6\xe4\xfc\x43\x7e\xfa\x76\xf2\xfb\x4b\xfe\xe6\xc5\xe4\xd7\xf1\xf4\xf5\x49\xfe\xee\x59\xfe\xfe\xd3\x74\xfc\x71\x3a\xfe\xfc\xe7\xd5\xcf\xfc\xdb\xf7\x48\xae\xe1\xde\x12\xea\x90\x29\x8e\xbc\xa8\xc0\xa9\x1c\x8c\x73\x9a\xd2\xc7\x97\x52\x51\xf9\xd0\xb8\x18\xff\x98\x9e\x9d\x56\x59\x17\xe7\x2f\xf3\xaf\xc7\xcb\x87\xeb\x0b\xf1\x24\x42\x2a\x99\x09\x6b\xf3\x03\x32\x3b\x5a\x56\xbc\x89\xff\x8d\x7a\x31\x60\x16\x47\x4c\x03\x19\x69\x45\x74\xc8\x14\x92\x64\x10\x25\x29\x09\xcd\x30\x26\xf3\x0b\x8a\x12\x8e\x69\xf5\xdf\x2c\x94\x45\xb9\x08\x5a\x0a\xb9\xa9\xc4\xc8\x54\x0f\xb3\xa2\x28\x3c\x54\x91\x41\x78\xb4\x79\xc5\x01\x52\xa3\xc5\x6c\x3e\x8c\x1a\x08\x95\x12\x8a\x4a\x36\x40\x68\xb9\x2d\x20\x2d\xb7\x55\xda\xfd\x25\xd9\x73\x5d\xf0\xdc\xab\xe0\xb9\xd7\xc0\x2b\xac\x9e\x9b\xd6\xad\xf3\x96\x6e\x2c\xa4\x5a\x5b\x42\x18\xa8\xb9\x33\xdb\xca\x6c\xeb\x5f\x00\x00\x00\xff\xff\x71\xe0\x7b\x41\x68\x03\x00\x00")

func templatesNpmNginxConfTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesNpmNginxConfTemplate,
		"templates/npm/nginx.conf.template",
	)
}

func templatesNpmNginxConfTemplate() (*asset, error) {
	bytes, err := templatesNpmNginxConfTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/npm/nginx.conf.template", size: 872, mode: os.FileMode(438), modTime: time.Unix(1647933024, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/maven/.helm/Chart.yaml":                templatesMavenHelmChartYaml,
	"templates/maven/.helm/templates/NOTES.txt":       templatesMavenHelmTemplatesNotesTxt,
	"templates/maven/.helm/templates/deployment.yaml": templatesMavenHelmTemplatesDeploymentYaml,
	"templates/maven/.helm/templates/service.yaml":    templatesMavenHelmTemplatesServiceYaml,
	"templates/maven/.helm/values.yaml":               templatesMavenHelmValuesYaml,
	"templates/maven/Dockerfile":                      templatesMavenDockerfile,
	"templates/maven/Jenkinsfile":                     templatesMavenJenkinsfile,
	"templates/maven/cicd.yaml":                       templatesMavenCicdYaml,
	"templates/npm/.helm/Chart.yaml":                  templatesNpmHelmChartYaml,
	"templates/npm/.helm/templates/NOTES.txt":         templatesNpmHelmTemplatesNotesTxt,
	"templates/npm/.helm/templates/deployment.yaml":   templatesNpmHelmTemplatesDeploymentYaml,
	"templates/npm/.helm/templates/service.yaml":      templatesNpmHelmTemplatesServiceYaml,
	"templates/npm/.helm/values.yaml":                 templatesNpmHelmValuesYaml,
	"templates/npm/Dockerfile":                        templatesNpmDockerfile,
	"templates/npm/Jenkinsfile":                       templatesNpmJenkinsfile,
	"templates/npm/cicd.yaml":                         templatesNpmCicdYaml,
	"templates/npm/nginx.conf.template":               templatesNpmNginxConfTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"maven": &bintree{nil, map[string]*bintree{
			".helm": &bintree{nil, map[string]*bintree{
				"Chart.yaml": &bintree{templatesMavenHelmChartYaml, map[string]*bintree{}},
				"templates": &bintree{nil, map[string]*bintree{
					"NOTES.txt":       &bintree{templatesMavenHelmTemplatesNotesTxt, map[string]*bintree{}},
					"deployment.yaml": &bintree{templatesMavenHelmTemplatesDeploymentYaml, map[string]*bintree{}},
					"service.yaml":    &bintree{templatesMavenHelmTemplatesServiceYaml, map[string]*bintree{}},
				}},
				"values.yaml": &bintree{templatesMavenHelmValuesYaml, map[string]*bintree{}},
			}},
			"Dockerfile":  &bintree{templatesMavenDockerfile, map[string]*bintree{}},
			"Jenkinsfile": &bintree{templatesMavenJenkinsfile, map[string]*bintree{}},
			"cicd.yaml":   &bintree{templatesMavenCicdYaml, map[string]*bintree{}},
		}},
		"npm": &bintree{nil, map[string]*bintree{
			".helm": &bintree{nil, map[string]*bintree{
				"Chart.yaml": &bintree{templatesNpmHelmChartYaml, map[string]*bintree{}},
				"templates": &bintree{nil, map[string]*bintree{
					"NOTES.txt":       &bintree{templatesNpmHelmTemplatesNotesTxt, map[string]*bintree{}},
					"deployment.yaml": &bintree{templatesNpmHelmTemplatesDeploymentYaml, map[string]*bintree{}},
					"service.yaml":    &bintree{templatesNpmHelmTemplatesServiceYaml, map[string]*bintree{}},
				}},
				"values.yaml": &bintree{templatesNpmHelmValuesYaml, map[string]*bintree{}},
			}},
			"Dockerfile":          &bintree{templatesNpmDockerfile, map[string]*bintree{}},
			"Jenkinsfile":         &bintree{templatesNpmJenkinsfile, map[string]*bintree{}},
			"cicd.yaml":           &bintree{templatesNpmCicdYaml, map[string]*bintree{}},
			"nginx.conf.template": &bintree{templatesNpmNginxConfTemplate, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
